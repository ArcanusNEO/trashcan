{"name":"coderc","settings":"{\"settings\":\"{\\n  \\\"C_Cpp.clang_format_fallbackStyle\\\": \\\"GNU\\\",\\n  \\\"C_Cpp.default.cStandard\\\": \\\"gnu17\\\",\\n  \\\"C_Cpp.default.cppStandard\\\": \\\"gnu++17\\\",\\n  \\\"C_Cpp.intelliSenseEngine\\\": \\\"disabled\\\",\\n  \\\"C_Cpp.renameRequiresIdentifier\\\": false,\\n  \\\"[NGINX]\\\": {\\n    \\\"editor.defaultFormatter\\\": \\\"hangxingliu.vscode-nginx-conf-hint\\\"\\n  },\\n  \\\"[c]\\\": {\\n    \\\"editor.defaultFormatter\\\": \\\"llvm-vs-code-extensions.vscode-clangd\\\"\\n  },\\n  \\\"[cmake]\\\": {},\\n  \\\"[cpp]\\\": {\\n    \\\"editor.defaultFormatter\\\": \\\"llvm-vs-code-extensions.vscode-clangd\\\"\\n  },\\n  \\\"[dockerfile]\\\": {\\n    \\\"editor.defaultFormatter\\\": \\\"ms-azuretools.vscode-docker\\\"\\n  },\\n  \\\"[ignore]\\\": {\\n    \\\"editor.defaultFormatter\\\": \\\"foxundermoon.shell-format\\\"\\n  },\\n  \\\"[java]\\\": {\\n    \\\"editor.defaultFormatter\\\": \\\"redhat.java\\\"\\n  },\\n  \\\"[python]\\\": {\\n    \\\"editor.defaultFormatter\\\": \\\"ms-python.autopep8\\\"\\n  },\\n  \\\"[rust]\\\": {\\n    \\\"editor.defaultFormatter\\\": \\\"rust-lang.rust-analyzer\\\"\\n  },\\n  \\\"[shellscript]\\\": {\\n    \\\"editor.defaultFormatter\\\": \\\"foxundermoon.shell-format\\\"\\n  },\\n  \\\"[xml]\\\": {\\n    \\\"editor.defaultFormatter\\\": \\\"DotJoshJohnson.xml\\\"\\n  },\\n  \\\"[yaml]\\\": {\\n    \\\"editor.defaultFormatter\\\": \\\"redhat.vscode-yaml\\\"\\n  },\\n  \\\"accessibility.signals.terminalBell\\\": {\\n    \\\"sound\\\": \\\"on\\\"\\n  },\\n  \\\"autopep8.args\\\": [\\n    \\\"--indent-size=2\\\"\\n  ],\\n  \\\"clangd.arguments\\\": [\\n    \\\"--enable-config\\\",\\n    \\\"-j=4\\\",\\n    \\\"--pch-storage=memory\\\",\\n    \\\"--clang-tidy\\\",\\n    \\\"--all-scopes-completion\\\",\\n    \\\"--header-insertion=never\\\",\\n    \\\"--completion-style=detailed\\\",\\n    \\\"--fallback-style=GNU\\\",\\n    \\\"--background-index\\\"\\n  ],\\n  \\\"clangd.fallbackFlags\\\": [\\n    \\\"-Wno-deprecated-non-prototype\\\"\\n  ],\\n  \\\"debug.console.fontSize\\\": 20,\\n  \\\"debug.terminal.clearBeforeReusing\\\": true,\\n  \\\"diffEditor.ignoreTrimWhitespace\\\": false,\\n  \\\"editor.cursorBlinking\\\": \\\"smooth\\\",\\n  \\\"editor.cursorSmoothCaretAnimation\\\": \\\"on\\\",\\n  \\\"editor.fontFamily\\\": \\\"FiraCode Nerd Font Mono\\\",\\n  \\\"editor.fontLigatures\\\": true,\\n  \\\"editor.fontSize\\\": 20,\\n  \\\"editor.minimap.showSlider\\\": \\\"always\\\",\\n  \\\"editor.quickSuggestions\\\": {\\n    \\\"comments\\\": \\\"inline\\\",\\n    \\\"strings\\\": \\\"inline\\\"\\n  },\\n  \\\"editor.rulers\\\": [\\n    80\\n  ],\\n  \\\"editor.smoothScrolling\\\": true,\\n  \\\"editor.suggestSelection\\\": \\\"first\\\",\\n  \\\"editor.tabCompletion\\\": \\\"on\\\",\\n  \\\"editor.tabSize\\\": 2,\\n  \\\"editor.unicodeHighlight.includeComments\\\": true,\\n  \\\"editor.unicodeHighlight.nonBasicASCII\\\": false,\\n  \\\"editor.wordSeparators\\\": \\\"`~!@#^&*()-=+[{]}\\\\\\\\|;:'\\\\\\\",.<>/?\\\",\\n  \\\"emmet.excludeLanguages\\\": [\\n    \\\"markdown\\\",\\n    \\\"php\\\"\\n  ],\\n  \\\"explorer.confirmDelete\\\": false,\\n  \\\"explorer.confirmDragAndDrop\\\": false,\\n  \\\"explorer.incrementalNaming\\\": \\\"smart\\\",\\n  \\\"extensions.autoCheckUpdates\\\": false,\\n  \\\"extensions.autoUpdate\\\": false,\\n  \\\"extensions.ignoreRecommendations\\\": true,\\n  \\\"files.associations\\\": {\\n    \\\"*.h\\\": \\\"c\\\"\\n  },\\n  \\\"files.autoGuessEncoding\\\": true,\\n  \\\"files.autoSave\\\": \\\"onFocusChange\\\",\\n  \\\"files.exclude\\\": {\\n    \\\"**/.classpath\\\": true,\\n    \\\"**/.factorypath\\\": true,\\n    \\\"**/.project\\\": true,\\n    \\\"**/.settings\\\": true\\n  },\\n  \\\"files.hotExit\\\": \\\"off\\\",\\n  \\\"files.readonlyFromPermissions\\\": true,\\n  \\\"files.simpleDialog.enable\\\": true,\\n  \\\"files.watcherExclude\\\": {\\n    \\\"**/.ammonite\\\": true,\\n    \\\"**/.bloop\\\": true,\\n    \\\"**/.metals\\\": true\\n  },\\n  \\\"git.allowForcePush\\\": true,\\n  \\\"git.confirmSync\\\": false,\\n  \\\"git.countBadge\\\": \\\"off\\\",\\n  \\\"git.enableSmartCommit\\\": true,\\n  \\\"git.enabled\\\": false,\\n  \\\"git.ignoreLegacyWarning\\\": true,\\n  \\\"git.openRepositoryInParentFolders\\\": \\\"never\\\",\\n  \\\"githubPullRequests.createOnPublishBranch\\\": \\\"never\\\",\\n  \\\"hexeditor.columnWidth\\\": 16,\\n  \\\"hexeditor.defaultEndianness\\\": \\\"little\\\",\\n  \\\"hexeditor.inspectorType\\\": \\\"aside\\\",\\n  \\\"hexeditor.showDecodedText\\\": true,\\n  \\\"javascript.updateImportsOnFileMove.enabled\\\": \\\"always\\\",\\n  \\\"json.format.enable\\\": false,\\n  \\\"latex-workshop.kpsewhich.bibtex.enabled\\\": true,\\n  \\\"latex-workshop.kpsewhich.class.enabled\\\": true,\\n  \\\"latex-workshop.latex.autoBuild.run\\\": \\\"never\\\",\\n  \\\"latex-workshop.latex.bibDirs\\\": [\\n    \\\".\\\",\\n    \\\"figures\\\"\\n  ],\\n  \\\"latex-workshop.latex.clean.fileTypes\\\": [\\n    \\\"*.aux\\\",\\n    \\\"*.bbl\\\",\\n    \\\"*.blg\\\",\\n    \\\"*.idx\\\",\\n    \\\"*.ind\\\",\\n    \\\"*.lof\\\",\\n    \\\"*.lot\\\",\\n    \\\"*.out\\\",\\n    \\\"*.toc\\\",\\n    \\\"*.acn\\\",\\n    \\\"*.acr\\\",\\n    \\\"*.alg\\\",\\n    \\\"*.glg\\\",\\n    \\\"*.glo\\\",\\n    \\\"*.gls\\\",\\n    \\\"*.ist\\\",\\n    \\\"*.fls\\\",\\n    \\\"*.log\\\",\\n    \\\"*.fdb_latexmk\\\",\\n    \\\"*.gz\\\",\\n    \\\"*.xdv\\\",\\n    \\\"_minted*\\\"\\n  ],\\n  \\\"latex-workshop.latex.recipes\\\": [\\n    {\\n      \\\"name\\\": \\\"latexmk\\\",\\n      \\\"tools\\\": [\\n        \\\"latexmk\\\"\\n      ]\\n    },\\n    {\\n      \\\"name\\\": \\\"xelatex\\\",\\n      \\\"tools\\\": [\\n        \\\"xelatex\\\"\\n      ]\\n    },\\n    {\\n      \\\"name\\\": \\\"xe->bib->xe->xe\\\",\\n      \\\"tools\\\": [\\n        \\\"xelatex\\\",\\n        \\\"bibtex\\\",\\n        \\\"xelatex\\\",\\n        \\\"xelatex\\\"\\n      ]\\n    }\\n  ],\\n  \\\"latex-workshop.latex.tools\\\": [\\n    {\\n      \\\"args\\\": [\\n        \\\"-synctex=1\\\",\\n        \\\"-interaction=nonstopmode\\\",\\n        \\\"-halt-on-error\\\",\\n        \\\"-file-line-error\\\",\\n        \\\"-shell-escape\\\",\\n        \\\"%DOCFILE%\\\"\\n      ],\\n      \\\"command\\\": \\\"xelatex\\\",\\n      \\\"name\\\": \\\"xelatex\\\"\\n    },\\n    {\\n      \\\"args\\\": [\\n        \\\"-synctex=1\\\",\\n        \\\"-interaction=nonstopmode\\\",\\n        \\\"-halt-on-error\\\",\\n        \\\"-file-line-error\\\",\\n        \\\"-shell-escape\\\",\\n        \\\"%DOCFILE%\\\"\\n      ],\\n      \\\"command\\\": \\\"pdflatex\\\",\\n      \\\"name\\\": \\\"pdflatex\\\"\\n    },\\n    {\\n      \\\"args\\\": [\\n        \\\"-synctex=1\\\",\\n        \\\"-interaction=nonstopmode\\\",\\n        \\\"-halt-on-error\\\",\\n        \\\"-file-line-error\\\",\\n        \\\"-shell-escape\\\",\\n        \\\"-pdf\\\",\\n        \\\"-xelatex\\\",\\n        \\\"%DOCFILE%\\\"\\n      ],\\n      \\\"command\\\": \\\"latexmk\\\",\\n      \\\"name\\\": \\\"latexmk\\\"\\n    },\\n    {\\n      \\\"args\\\": [\\n        \\\"%DOCFILE%\\\"\\n      ],\\n      \\\"command\\\": \\\"bibtex\\\",\\n      \\\"name\\\": \\\"bibtex\\\"\\n    }\\n  ],\\n  \\\"latex-workshop.linting.chktex.enabled\\\": true,\\n  \\\"latex-workshop.view.pdf.viewer\\\": \\\"tab\\\",\\n  \\\"markdown.preview.fontSize\\\": 18,\\n  \\\"notebook.experimental.remoteSave\\\": true,\\n  \\\"notebook.output.textLineLimit\\\": 1000,\\n  \\\"php.suggest.basic\\\": false,\\n  \\\"php.validate.enable\\\": false,\\n  \\\"python.languageServer\\\": \\\"Jedi\\\",\\n  \\\"redhat.telemetry.enabled\\\": false,\\n  \\\"remote.SSH.localServerDownload\\\": \\\"always\\\",\\n  \\\"remote.SSH.remoteServerListenOnSocket\\\": true,\\n  \\\"remote.downloadExtensionsLocally\\\": true,\\n  \\\"remote.tunnels.alwaysUpdateCLI\\\": true,\\n  \\\"remoteHub.experimental.useDiffMatchPatch\\\": true,\\n  \\\"remoteHub.gitProtocol\\\": \\\"ssh\\\",\\n  \\\"rust-analyzer.rustfmt.extraArgs\\\": [\\n    \\\"--config \\\\\\\"tab_spaces=2\\\\\\\"\\\"\\n  ],\\n  \\\"rust-analyzer.rustfmt.overrideCommand\\\": [\\n    \\\"rustfmt\\\",\\n    \\\"--config\\\",\\n    \\\"tab_spaces=2\\\"\\n  ],\\n  \\\"scorpiotools.js.indent_size\\\": 2,\\n  \\\"scorpiotools.md5.upper\\\": true,\\n  \\\"search.followSymlinks\\\": false,\\n  \\\"search.showLineNumbers\\\": true,\\n  \\\"security.workspace.trust.enabled\\\": false,\\n  \\\"settingsSync.ignoredSettings\\\": [\\n    \\\"-window.zoomLevel\\\"\\n  ],\\n  \\\"sonarlint.rules\\\": {\\n    \\\"cpp:S5025\\\": {\\n      \\\"level\\\": \\\"off\\\"\\n    }\\n  },\\n  \\\"symbolMasks.masks\\\": [\\n    {\\n      \\\"language\\\": [\\n        \\\"c\\\",\\n        \\\"cpp\\\",\\n        \\\"javascript\\\"\\n      ],\\n      \\\"patterns\\\": [\\n        {\\n          \\\"pattern\\\": \\\"(?<=[^&])&&(?=[^&])\\\",\\n          \\\"replace\\\": \\\"∧\\\",\\n          \\\"style\\\": {\\n            \\\"fontWeight\\\": \\\"bold\\\"\\n          }\\n        },\\n        {\\n          \\\"pattern\\\": \\\"(?<=[^\\\\\\\\|])\\\\\\\\|\\\\\\\\|(?=[^\\\\\\\\|])\\\",\\n          \\\"replace\\\": \\\"∨\\\",\\n          \\\"style\\\": {\\n            \\\"fontWeight\\\": \\\"bold\\\"\\n          }\\n        },\\n        {\\n          \\\"pattern\\\": \\\"!(?=[^=])\\\",\\n          \\\"replace\\\": \\\"¬\\\"\\n        },\\n        {\\n          \\\"pattern\\\": \\\"(?<=[^\\\\\\\\^])\\\\\\\\^(?=[^\\\\\\\\^])\\\",\\n          \\\"replace\\\": \\\"⊕\\\"\\n        },\\n        {\\n          \\\"pattern\\\": \\\"(?<=\\\\\\\\b)(false|null|sqrt|true|undefined)(?=\\\\\\\\b)\\\",\\n          \\\"replace\\\": {\\n            \\\"false\\\": {\\n              \\\"text\\\": \\\"⊥\\\"\\n            },\\n            \\\"null\\\": {\\n              \\\"text\\\": \\\"∅\\\"\\n            },\\n            \\\"sqrt\\\": {\\n              \\\"text\\\": \\\"√\\\"\\n            },\\n            \\\"true\\\": {\\n              \\\"text\\\": \\\"⊤\\\"\\n            },\\n            \\\"undefined\\\": {\\n              \\\"text\\\": \\\"�\\\"\\n            }\\n          }\\n        }\\n      ]\\n    },\\n    {\\n      \\\"language\\\": \\\"*\\\",\\n      \\\"patterns\\\": [\\n        {\\n          \\\"pattern\\\": \\\"(?<=[^<>])([<>]{2,3})(?=[^<>])\\\",\\n          \\\"replace\\\": {\\n            \\\"<<\\\": {\\n              \\\"fontWeight\\\": \\\"bold\\\",\\n              \\\"text\\\": \\\"≪\\\"\\n            },\\n            \\\"<<<\\\": {\\n              \\\"text\\\": \\\"⋘\\\"\\n            },\\n            \\\">>\\\": {\\n              \\\"fontWeight\\\": \\\"bold\\\",\\n              \\\"text\\\": \\\"≫\\\"\\n            },\\n            \\\">>>\\\": {\\n              \\\"text\\\": \\\"⋙\\\"\\n            }\\n          }\\n        },\\n        {\\n          \\\"pattern\\\": \\\":=(?=[^=])\\\",\\n          \\\"replace\\\": \\\"≜\\\"\\n        },\\n        {\\n          \\\"pattern\\\": \\\"(?<=[^<=>])(!==|<>|===)(?=[^<=>])\\\",\\n          \\\"replace\\\": {\\n            \\\"!==\\\": {\\n              \\\"text\\\": \\\"≢\\\"\\n            },\\n            \\\"<>\\\": {\\n              \\\"text\\\": \\\"≠\\\"\\n            },\\n            \\\"===\\\": {\\n              \\\"text\\\": \\\"≡\\\"\\n            }\\n          }\\n        },\\n        {\\n          \\\"pattern\\\": \\\"(?<=[a-zA-Z0-9])_[0-9](?=_?\\\\\\\\b)\\\",\\n          \\\"replace\\\": {\\n            \\\"_0\\\": {\\n              \\\"text\\\": \\\"₀\\\"\\n            },\\n            \\\"_1\\\": {\\n              \\\"text\\\": \\\"₁\\\"\\n            },\\n            \\\"_2\\\": {\\n              \\\"text\\\": \\\"₂\\\"\\n            },\\n            \\\"_3\\\": {\\n              \\\"text\\\": \\\"₃\\\"\\n            },\\n            \\\"_4\\\": {\\n              \\\"text\\\": \\\"₄\\\"\\n            },\\n            \\\"_5\\\": {\\n              \\\"text\\\": \\\"₅\\\"\\n            },\\n            \\\"_6\\\": {\\n              \\\"text\\\": \\\"₆\\\"\\n            },\\n            \\\"_7\\\": {\\n              \\\"text\\\": \\\"₇\\\"\\n            },\\n            \\\"_8\\\": {\\n              \\\"text\\\": \\\"₈\\\"\\n            },\\n            \\\"_9\\\": {\\n              \\\"text\\\": \\\"₉\\\"\\n            }\\n          }\\n        },\\n        {\\n          \\\"pattern\\\": \\\"(?<=[^a-zA-Z])([aA]lpha|[bB]eta|[gG]amma|[dD]elta|([eE]|vare)psilon|[zZ]eta|[eE]ta|([tT]|vart)heta|[iI]ota|([kK]|vark)appa|[lL]ambda|[mM]u|[nN]u|[xX]i|[oO]micron|([pP]|varp)i|([rR]|varr)ho|([sS]|vars)igma|[tT]au|[uU]psilon|([pP]|varp)hi|[cC]hi|[pP]si|[oO]mega)(?=[^a-zA-Z])\\\",\\n          \\\"replace\\\": {\\n            \\\"Alpha\\\": {\\n              \\\"text\\\": \\\"Α\\\"\\n            },\\n            \\\"Beta\\\": {\\n              \\\"text\\\": \\\"Β\\\"\\n            },\\n            \\\"Chi\\\": {\\n              \\\"text\\\": \\\"Χ\\\"\\n            },\\n            \\\"Delta\\\": {\\n              \\\"text\\\": \\\"Δ\\\"\\n            },\\n            \\\"Epsilon\\\": {\\n              \\\"text\\\": \\\"Ε\\\"\\n            },\\n            \\\"Eta\\\": {\\n              \\\"text\\\": \\\"Η\\\"\\n            },\\n            \\\"Gamma\\\": {\\n              \\\"text\\\": \\\"Γ\\\"\\n            },\\n            \\\"Iota\\\": {\\n              \\\"text\\\": \\\"Ι\\\"\\n            },\\n            \\\"Kappa\\\": {\\n              \\\"text\\\": \\\"Κ\\\"\\n            },\\n            \\\"Lambda\\\": {\\n              \\\"text\\\": \\\"Λ\\\"\\n            },\\n            \\\"Mu\\\": {\\n              \\\"text\\\": \\\"Μ\\\"\\n            },\\n            \\\"Nu\\\": {\\n              \\\"text\\\": \\\"Ν\\\"\\n            },\\n            \\\"Omega\\\": {\\n              \\\"text\\\": \\\"Ω\\\"\\n            },\\n            \\\"Omicron\\\": {\\n              \\\"text\\\": \\\"Ο\\\"\\n            },\\n            \\\"Phi\\\": {\\n              \\\"text\\\": \\\"Φ\\\"\\n            },\\n            \\\"Pi\\\": {\\n              \\\"text\\\": \\\"Π\\\"\\n            },\\n            \\\"Psi\\\": {\\n              \\\"text\\\": \\\"Ψ\\\"\\n            },\\n            \\\"Rho\\\": {\\n              \\\"text\\\": \\\"Ρ\\\"\\n            },\\n            \\\"Sigma\\\": {\\n              \\\"text\\\": \\\"Σ\\\"\\n            },\\n            \\\"Tau\\\": {\\n              \\\"text\\\": \\\"Τ\\\"\\n            },\\n            \\\"Theta\\\": {\\n              \\\"text\\\": \\\"Θ\\\"\\n            },\\n            \\\"Upsilon\\\": {\\n              \\\"text\\\": \\\"Υ\\\"\\n            },\\n            \\\"Xi\\\": {\\n              \\\"text\\\": \\\"Ξ\\\"\\n            },\\n            \\\"Zeta\\\": {\\n              \\\"text\\\": \\\"Ζ\\\"\\n            },\\n            \\\"alpha\\\": {\\n              \\\"text\\\": \\\"α\\\"\\n            },\\n            \\\"beta\\\": {\\n              \\\"text\\\": \\\"β\\\"\\n            },\\n            \\\"chi\\\": {\\n              \\\"text\\\": \\\"χ\\\"\\n            },\\n            \\\"delta\\\": {\\n              \\\"text\\\": \\\"δ\\\"\\n            },\\n            \\\"epsilon\\\": {\\n              \\\"text\\\": \\\"ϵ\\\"\\n            },\\n            \\\"eta\\\": {\\n              \\\"text\\\": \\\"η\\\"\\n            },\\n            \\\"gamma\\\": {\\n              \\\"text\\\": \\\"γ\\\"\\n            },\\n            \\\"iota\\\": {\\n              \\\"text\\\": \\\"ι\\\"\\n            },\\n            \\\"kappa\\\": {\\n              \\\"text\\\": \\\"κ\\\"\\n            },\\n            \\\"lambda\\\": {\\n              \\\"text\\\": \\\"λ\\\"\\n            },\\n            \\\"mu\\\": {\\n              \\\"text\\\": \\\"μ\\\"\\n            },\\n            \\\"nu\\\": {\\n              \\\"text\\\": \\\"ν\\\"\\n            },\\n            \\\"omega\\\": {\\n              \\\"text\\\": \\\"ω\\\"\\n            },\\n            \\\"omicron\\\": {\\n              \\\"text\\\": \\\"ο\\\"\\n            },\\n            \\\"phi\\\": {\\n              \\\"text\\\": \\\"ϕ\\\"\\n            },\\n            \\\"pi\\\": {\\n              \\\"text\\\": \\\"π\\\"\\n            },\\n            \\\"psi\\\": {\\n              \\\"text\\\": \\\"ψ\\\"\\n            },\\n            \\\"rho\\\": {\\n              \\\"text\\\": \\\"ρ\\\"\\n            },\\n            \\\"sigma\\\": {\\n              \\\"text\\\": \\\"σ\\\"\\n            },\\n            \\\"tau\\\": {\\n              \\\"text\\\": \\\"τ\\\"\\n            },\\n            \\\"theta\\\": {\\n              \\\"text\\\": \\\"θ\\\"\\n            },\\n            \\\"upsilon\\\": {\\n              \\\"text\\\": \\\"υ\\\"\\n            },\\n            \\\"varepsilon\\\": {\\n              \\\"text\\\": \\\"ε\\\"\\n            },\\n            \\\"varkappa\\\": {\\n              \\\"text\\\": \\\"ϰ\\\"\\n            },\\n            \\\"varphi\\\": {\\n              \\\"text\\\": \\\"φ\\\"\\n            },\\n            \\\"varpi\\\": {\\n              \\\"text\\\": \\\"ϖ\\\"\\n            },\\n            \\\"varrho\\\": {\\n              \\\"text\\\": \\\"ϱ\\\"\\n            },\\n            \\\"varsigma\\\": {\\n              \\\"text\\\": \\\"ς\\\"\\n            },\\n            \\\"vartheta\\\": {\\n              \\\"text\\\": \\\"ϑ\\\"\\n            },\\n            \\\"xi\\\": {\\n              \\\"text\\\": \\\"ξ\\\"\\n            },\\n            \\\"zeta\\\": {\\n              \\\"text\\\": \\\"ζ\\\"\\n            }\\n          }\\n        }\\n      ]\\n    }\\n  ],\\n  \\\"telemetry.telemetryLevel\\\": \\\"off\\\",\\n  \\\"terminal.external.linuxExec\\\": \\\"qterminal\\\",\\n  \\\"terminal.integrated.allowChords\\\": false,\\n  \\\"terminal.integrated.enableFileLinks\\\": \\\"notRemote\\\",\\n  \\\"terminal.integrated.enableImages\\\": true,\\n  \\\"terminal.integrated.enableMultiLinePasteWarning\\\": false,\\n  \\\"terminal.integrated.enableVisualBell\\\": true,\\n  \\\"terminal.integrated.env.linux\\\": {\\n    \\\"ZTERM\\\": null\\n  },\\n  \\\"terminal.integrated.fontFamily\\\": \\\"Ubuntu Mono\\\",\\n  \\\"terminal.integrated.fontSize\\\": 20,\\n  \\\"terminal.integrated.persistentSessionReviveProcess\\\": \\\"never\\\",\\n  \\\"terminal.integrated.persistentSessionScrollback\\\": 0,\\n  \\\"terminal.integrated.scrollback\\\": 65535,\\n  \\\"terminal.integrated.sendKeybindingsToShell\\\": true,\\n  \\\"terminal.integrated.shellIntegration.history\\\": 0,\\n  \\\"terminal.integrated.smoothScrolling\\\": true,\\n  \\\"update.mode\\\": \\\"manual\\\",\\n  \\\"update.showReleaseNotes\\\": false,\\n  \\\"verilog-formatter.istyle.style\\\": \\\"GNU\\\",\\n  \\\"vsintellicode.modify.editor.suggestSelection\\\": \\\"automaticallyOverrodeDefaultValue\\\",\\n  \\\"window.customMenuBarAltFocus\\\": false,\\n  \\\"window.enableMenuBarMnemonics\\\": false,\\n  \\\"window.menuBarVisibility\\\": \\\"hidden\\\",\\n  \\\"window.newWindowDimensions\\\": \\\"offset\\\",\\n  \\\"window.restoreFullscreen\\\": true,\\n  \\\"window.restoreWindows\\\": \\\"none\\\",\\n\\\"window.title\\\": \\\"${activeEditorLong}${dirty}${separator}${appName} (UNREGISTERED)\\\",\\n\\\"window.zoomLevel\\\": 1,\\n  \\\"workbench.colorCustomizations\\\": {\\n    \\\"editorUnicodeHighlight.border\\\": \\\"#0000\\\"\\n  },\\n  \\\"workbench.colorTheme\\\": \\\"Solarized Dark+\\\",\\n  \\\"workbench.commandPalette.history\\\": 0,\\n  \\\"workbench.editor.defaultBinaryEditor\\\": \\\"hexEditor.hexedit\\\",\\n  \\\"workbench.editor.empty.hint\\\": \\\"hidden\\\",\\n  \\\"workbench.editor.tabActionLocation\\\": \\\"left\\\",\\n  \\\"workbench.editor.tabCloseButton\\\": \\\"left\\\",\\n  \\\"workbench.editorAssociations\\\": {\\n    \\\"*.pdf\\\": \\\"latex-workshop-pdf-hook\\\"\\n  },\\n  \\\"workbench.iconTheme\\\": \\\"vscode-icons-mac\\\",\\n  \\\"workbench.list.smoothScrolling\\\": true,\\n  \\\"workbench.productIconTheme\\\": \\\"macos-modern\\\",\\n  \\\"workbench.startupEditor\\\": \\\"none\\\",\\n  \\\"workbench.tree.enableStickyScroll\\\": true,\\n  \\\"window.newWindowProfile\\\": \\\"Default\\\"\\n}\"}","keybindings":"{\"keybindings\":\"[\\n  {\\n    \\\"command\\\": \\\"deleteAllRight\\\",\\n    \\\"key\\\": \\\"alt+k\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"cursorHome\\\",\\n    \\\"key\\\": \\\"alt+a\\\",\\n    \\\"when\\\": \\\"textInputFocus\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"cursorEnd\\\",\\n    \\\"key\\\": \\\"alt+e\\\",\\n    \\\"when\\\": \\\"textInputFocus\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"cursorEndSelect\\\",\\n    \\\"key\\\": \\\"shift+alt+e\\\",\\n    \\\"when\\\": \\\"textInputFocus\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"cursorPageDown\\\",\\n    \\\"key\\\": \\\"alt+]\\\",\\n    \\\"when\\\": \\\"textInputFocus\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"cursorPageUp\\\",\\n    \\\"key\\\": \\\"alt+[\\\",\\n    \\\"when\\\": \\\"textInputFocus\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"cursorTop\\\",\\n    \\\"key\\\": \\\"alt+,\\\",\\n    \\\"when\\\": \\\"textInputFocus\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"cursorHomeSelect\\\",\\n    \\\"key\\\": \\\"shift+alt+a\\\",\\n    \\\"when\\\": \\\"textInputFocus\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"cursorBottom\\\",\\n    \\\"key\\\": \\\"alt+.\\\",\\n    \\\"when\\\": \\\"textInputFocus\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"editor.action.transformToKebabcase\\\",\\n    \\\"key\\\": \\\"alt+t k\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"editor.action.transformToTitlecase\\\",\\n    \\\"key\\\": \\\"alt+t t\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"editor.action.transformToUppercase\\\",\\n    \\\"key\\\": \\\"alt+t u\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"editor.action.transformToSnakecase\\\",\\n    \\\"key\\\": \\\"alt+t s\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"editor.action.transformToLowercase\\\",\\n    \\\"key\\\": \\\"alt+t l\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"-keybindings.editor.recordSearchKeys\\\",\\n    \\\"key\\\": \\\"alt+k\\\",\\n    \\\"when\\\": \\\"inKeybindings && inKeybindingsSearch\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"-workbench.action.terminal.openNativeConsole\\\",\\n    \\\"key\\\": \\\"ctrl+shift+c\\\",\\n    \\\"when\\\": \\\"!terminalFocus\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"cursorTopSelect\\\",\\n    \\\"key\\\": \\\"shift+alt+,\\\",\\n    \\\"when\\\": \\\"textInputFocus\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"cursorBottomSelect\\\",\\n    \\\"key\\\": \\\"shift+alt+.\\\",\\n    \\\"when\\\": \\\"textInputFocus\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"editor.action.transformToCamelcase\\\",\\n    \\\"key\\\": \\\"alt+t c\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"editor.action.blockComment\\\",\\n    \\\"key\\\": \\\"ctrl+'\\\",\\n    \\\"when\\\": \\\"editorTextFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"-editor.action.blockComment\\\",\\n    \\\"key\\\": \\\"ctrl+shift+a\\\",\\n    \\\"when\\\": \\\"editorTextFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"deleteAllLeft\\\",\\n    \\\"key\\\": \\\"shift+alt+k\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"-workbench.action.navigateForward\\\",\\n    \\\"key\\\": \\\"ctrl+shift+-\\\",\\n    \\\"when\\\": \\\"canNavigateForward\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"-workbench.action.navigateBack\\\",\\n    \\\"key\\\": \\\"ctrl+alt+-\\\",\\n    \\\"when\\\": \\\"canNavigateBack\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"cursorPageDownSelect\\\",\\n    \\\"key\\\": \\\"shift+alt+]\\\",\\n    \\\"when\\\": \\\"textInputFocus\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"cursorPageUpSelect\\\",\\n    \\\"key\\\": \\\"shift+alt+[\\\",\\n    \\\"when\\\": \\\"textInputFocus\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"editor.action.inlineSuggest.acceptNextWord\\\",\\n    \\\"key\\\": \\\"alt+right\\\",\\n    \\\"when\\\": \\\"inlineSuggestionVisible && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"-editor.action.inlineSuggest.acceptNextWord\\\",\\n    \\\"key\\\": \\\"ctrl+right\\\",\\n    \\\"when\\\": \\\"inlineSuggestionVisible && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"editor.action.inlineSuggest.showNext\\\",\\n    \\\"key\\\": \\\"alt+\\\\\\\\\\\",\\n    \\\"when\\\": \\\"inlineSuggestionVisible && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"-editor.action.inlineSuggest.showNext\\\",\\n    \\\"key\\\": \\\"alt+]\\\",\\n    \\\"when\\\": \\\"inlineSuggestionVisible && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"editor.action.inlineSuggest.showPrevious\\\",\\n    \\\"key\\\": \\\"shift+alt+\\\\\\\\\\\",\\n    \\\"when\\\": \\\"inlineSuggestionVisible && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"-editor.action.inlineSuggest.showPrevious\\\",\\n    \\\"key\\\": \\\"alt+[\\\",\\n    \\\"when\\\": \\\"inlineSuggestionVisible && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"editor.action.autoFix\\\",\\n    \\\"key\\\": \\\"shift+alt+/\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\\\\\\\s|^)quickfix\\\\\\\\b/\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"-editor.action.autoFix\\\",\\n    \\\"key\\\": \\\"shift+alt+.\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\\\\\\\s|^)quickfix\\\\\\\\b/\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"deleteWordPartLeft\\\",\\n    \\\"key\\\": \\\"alt+backspace\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"deleteWordPartRight\\\",\\n    \\\"key\\\": \\\"alt+d\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"cursorWordPartLeft\\\",\\n    \\\"key\\\": \\\"alt+b\\\",\\n    \\\"when\\\": \\\"textInputFocus\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"cursorWordPartLeftSelect\\\",\\n    \\\"key\\\": \\\"shift+alt+b\\\",\\n    \\\"when\\\": \\\"textInputFocus\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"cursorWordPartRight\\\",\\n    \\\"key\\\": \\\"alt+f\\\",\\n    \\\"when\\\": \\\"textInputFocus\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"cursorWordPartRightSelect\\\",\\n    \\\"key\\\": \\\"shift+alt+f\\\",\\n    \\\"when\\\": \\\"textInputFocus\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"-workbench.view.extension.thunder-client\\\",\\n    \\\"key\\\": \\\"ctrl+shift+r\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"java.projectConfiguration.update\\\",\\n    \\\"key\\\": \\\"ctrl+shift+alt+r\\\",\\n    \\\"when\\\": \\\"editorFocus\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"-java.projectConfiguration.update\\\",\\n    \\\"key\\\": \\\"shift+alt+u\\\",\\n    \\\"when\\\": \\\"editorFocus\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"-java.welcome\\\",\\n    \\\"key\\\": \\\"shift+f1\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"-java.workspace.compile\\\",\\n    \\\"key\\\": \\\"shift+alt+b\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"makefile.launchRun\\\",\\n    \\\"key\\\": \\\"shift+f5\\\",\\n    \\\"when\\\": \\\"debugUx == 'simple'\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"-debug.openView\\\",\\n    \\\"key\\\": \\\"ctrl+f5\\\",\\n    \\\"when\\\": \\\"!debuggersAvailable\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"-debug.openView\\\",\\n    \\\"key\\\": \\\"f5\\\",\\n    \\\"when\\\": \\\"!debuggersAvailable\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"makefile.launchDebug\\\",\\n    \\\"key\\\": \\\"f5\\\",\\n    \\\"when\\\": \\\"debugUx == 'simple'\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"MAKEFLAGS += -r\\\\n.SUFFIXES: .c .o\\\\n\\\\nCFLAGS += -Wall -Wvla -Og -ggdb3\\\\nLDLIBS += -lm\\\\n\\\\nSRC := $(wildcard *.c)\\\\nOBJ := $(patsubst %.c, %.o, $(SRC))\\\\nEXE := $(patsubst %.c, %, $(SRC))\\\\n\\\\nPHONY := all clean\\\\nall: $(EXE)\\\\nclean:\\\\n\\\\t$(RM) -- $(OBJ) $(EXE)\\\\n\\\\n.c.o:\\\\n\\\\t$(CC) -c $(CFLAGS) $(CPPFLAGS) -o$@ $^\\\\n\\\\n.o:\\\\n\\\\t$(CC) $(CFLAGS) $(LDFLAGS) -o$@ $^ $(LDLIBS)\\\\n\\\\n.SECONDARY: $(OBJ)\\\\n.PHONY: $(PHONY)\\\\n\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+i m c\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"/*\\\\nRedistribution and use in source and binary forms, with or without\\\\nmodification, are permitted provided that the following conditions are met:\\\\n\\\\n  1. Redistributions of source code must retain the above copyright notice,\\\\nthis list of conditions and the following disclaimer.\\\\n  2. Redistributions in binary form must reproduce the above copyright notice,\\\\nthis list of conditions and the following disclaimer in the documentation\\\\nand/or other materials provided with the distribution.\\\\n\\\\nTHIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS \\\\\\\"AS IS\\\\\\\" AND ANY\\\\nEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\\\\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\\\nDISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR ANY\\\\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\\\\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\\\\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\\\\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\\\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\\\\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\\\n*/\\\\n\\\\n#define _GNU_SOURCE\\\\n\\\\n/* C89 */\\\\n#include <assert.h>\\\\n#include <ctype.h>\\\\n#include <errno.h>\\\\n#include <float.h>\\\\n#include <limits.h>\\\\n#include <locale.h>\\\\n#include <math.h>\\\\n#include <setjmp.h>\\\\n#include <signal.h>\\\\n#include <stdarg.h>\\\\n#include <stddef.h>\\\\n#include <stdio.h>\\\\n#include <stdlib.h>\\\\n#include <string.h>\\\\n#include <time.h>\\\\n\\\\n/* C99 */\\\\n#include <complex.h>\\\\n#include <fenv.h>\\\\n#include <inttypes.h>\\\\n/* #include <iso646.h> */\\\\n#include <stdbool.h>\\\\n#include <stdint.h>\\\\n#include <tgmath.h>\\\\n#include <wchar.h>\\\\n#include <wctype.h>\\\\n\\\\n/* C11 */\\\\n#include <stdalign.h>\\\\n/* #include <stdatomic.h> */\\\\n#include <stdnoreturn.h>\\\\n/* #include <threads.h> */\\\\n#include <uchar.h>\\\\n\\\\n/* POSIX */\\\\n/* #include <regex.h> */\\\\n/* #include <unistd.h> */\\\\n\\\\n#ifdef __cplusplus\\\\n#define null nullptr\\\\n#else\\\\n#define null NULL\\\\n#endif\\\\n#define generic _Generic\\\\n#define bitint _BitInt\\\\n#ifndef __cplusplus\\\\n#define auto __auto_type\\\\n#endif\\\\n#define asm __asm__\\\\n#define typeof __typeof__\\\\n\\\\ntypedef uint8_t byte;\\\\ntypedef uintptr_t word;\\\\n\\\\ntypedef int8_t i8;\\\\ntypedef uint8_t u8;\\\\ntypedef int16_t i16;\\\\ntypedef uint16_t u16;\\\\ntypedef int32_t i32;\\\\ntypedef uint32_t u32;\\\\ntypedef int64_t i64;\\\\ntypedef uint64_t u64;\\\\n#if (__SIZEOF_INT128__ + 0) == 16\\\\n#define __P_INT128_ 16\\\\ntypedef __int128_t i128;\\\\ntypedef __uint128_t u128;\\\\n#else\\\\ntypedef intmax_t i128;\\\\ntypedef uintmax_t u128;\\\\n#endif\\\\ntypedef intmax_t imx;\\\\ntypedef uintmax_t umx;\\\\ntypedef intptr_t iptr;\\\\ntypedef uintptr_t uptr;\\\\ntypedef ssize_t isz;\\\\ntypedef size_t usz;\\\\n\\\\ntypedef uint_least8_t c8;\\\\ntypedef char16_t c16;\\\\ntypedef char32_t c32;\\\\n\\\\ntypedef double real;\\\\n#ifdef __cplusplus\\\\ntypedef float f32;\\\\ntypedef double f64;\\\\ntypedef long double f128;\\\\n#else\\\\n#ifdef __FLT16_MAX__\\\\n#define __P_FLOAT16_ 2\\\\ntypedef _Float16 f16;\\\\n#endif\\\\n#define __P_FLOAT32_ 4\\\\ntypedef _Float32 f32;\\\\n#define __P_FLOAT64_ 8\\\\ntypedef _Float64 f64;\\\\n#if (__SIZEOF_FLOAT128__ + 0) == 16\\\\n#define __P_FLOAT128_ 16\\\\ntypedef __float128 f128;\\\\n#endif\\\\n#endif\\\\n\\\\n#define todo$(...) static_assert (0 __VA_OPT__ (, ) __VA_ARGS__)\\\\n\\\\n#define macro$(name) __P_##name##_\\\\n#define $tatic(name) __S_##name##_\\\\n#define con$t(name) __C_##name##_\\\\n\\\\n#define __C_p2_ UINT64_C (3)\\\\n#define __C_p3_ UINT64_C (7)\\\\n#define __C_p4_ UINT64_C (13)\\\\n#define __C_p5_ UINT64_C (31)\\\\n#define __C_p6_ UINT64_C (61)\\\\n#define __C_p7_ UINT64_C (127)\\\\n#define __C_p8_ UINT64_C (251)\\\\n#define __C_p9_ UINT64_C (509)\\\\n#define __C_p10_ UINT64_C (1021)\\\\n#define __C_p11_ UINT64_C (2039)\\\\n#define __C_p12_ UINT64_C (4093)\\\\n#define __C_p13_ UINT64_C (8191)\\\\n#define __C_p14_ UINT64_C (16381)\\\\n#define __C_p15_ UINT64_C (32749)\\\\n#define __C_p16_ UINT64_C (65521)\\\\n#define __C_p17_ UINT64_C (131071)\\\\n#define __C_p18_ UINT64_C (262139)\\\\n#define __C_p19_ UINT64_C (524287)\\\\n#define __C_p20_ UINT64_C (1048573)\\\\n#define __C_p21_ UINT64_C (2097143)\\\\n#define __C_p22_ UINT64_C (4194301)\\\\n#define __C_p23_ UINT64_C (8388593)\\\\n#define __C_p24_ UINT64_C (16777213)\\\\n#define __C_p25_ UINT64_C (33554393)\\\\n#define __C_p26_ UINT64_C (67108859)\\\\n#define __C_p27_ UINT64_C (134217689)\\\\n#define __C_p28_ UINT64_C (268435399)\\\\n#define __C_p29_ UINT64_C (536870909)\\\\n#define __C_p30_ UINT64_C (1073741789)\\\\n#define __C_p31_ UINT64_C (2147483647)\\\\n#define __C_p32_ UINT64_C (4294967291)\\\\n#define __C_p33_ UINT64_C (8589934583)\\\\n#define __C_p34_ UINT64_C (17179869143)\\\\n#define __C_p35_ UINT64_C (34359738337)\\\\n#define __C_p36_ UINT64_C (68719476731)\\\\n#define __C_p37_ UINT64_C (137438953447)\\\\n#define __C_p38_ UINT64_C (274877906899)\\\\n#define __C_p39_ UINT64_C (549755813881)\\\\n#define __C_p40_ UINT64_C (1099511627689)\\\\n#define __C_p41_ UINT64_C (2199023255531)\\\\n#define __C_p42_ UINT64_C (4398046511093)\\\\n#define __C_p43_ UINT64_C (8796093022151)\\\\n#define __C_p44_ UINT64_C (17592186044399)\\\\n#define __C_p45_ UINT64_C (35184372088777)\\\\n#define __C_p46_ UINT64_C (70368744177643)\\\\n#define __C_p47_ UINT64_C (140737488355213)\\\\n#define __C_p48_ UINT64_C (281474976710597)\\\\n#define __C_p49_ UINT64_C (562949953421231)\\\\n#define __C_p50_ UINT64_C (1125899906842597)\\\\n#define __C_p51_ UINT64_C (2251799813685119)\\\\n#define __C_p52_ UINT64_C (4503599627370449)\\\\n#define __C_p53_ UINT64_C (9007199254740881)\\\\n#define __C_p54_ UINT64_C (18014398509481951)\\\\n#define __C_p55_ UINT64_C (36028797018963913)\\\\n#define __C_p56_ UINT64_C (72057594037927931)\\\\n#define __C_p57_ UINT64_C (144115188075855859)\\\\n#define __C_p58_ UINT64_C (288230376151711717)\\\\n#define __C_p59_ UINT64_C (576460752303423433)\\\\n#define __C_p60_ UINT64_C (1152921504606846883)\\\\n#define __C_p61_ UINT64_C (2305843009213693951)\\\\n#define __C_p62_ UINT64_C (4611686018427387847)\\\\n#define __C_p63_ UINT64_C (9223372036854775783)\\\\n#define __C_p64_ UINT64_C (18446744073709551557)\\\\n\\\\n#define __C_tp3_ UINT64_C (5)\\\\n#define __C_tp4_ UINT64_C (11)\\\\n#define __C_tp5_ UINT64_C (29)\\\\n#define __C_tp6_ UINT64_C (59)\\\\n#define __C_tp7_ UINT64_C (107)\\\\n#define __C_tp8_ UINT64_C (239)\\\\n#define __C_tp9_ UINT64_C (461)\\\\n#define __C_tp10_ UINT64_C (1019)\\\\n#define __C_tp11_ UINT64_C (2027)\\\\n#define __C_tp12_ UINT64_C (4091)\\\\n#define __C_tp13_ UINT64_C (8087)\\\\n#define __C_tp14_ UINT64_C (16361)\\\\n#define __C_tp15_ UINT64_C (32717)\\\\n#define __C_tp16_ UINT64_C (65519)\\\\n#define __C_tp17_ UINT64_C (131009)\\\\n#define __C_tp18_ UINT64_C (262109)\\\\n#define __C_tp19_ UINT64_C (524219)\\\\n#define __C_tp20_ UINT64_C (1048571)\\\\n#define __C_tp21_ UINT64_C (2097131)\\\\n#define __C_tp22_ UINT64_C (4193801)\\\\n#define __C_tp23_ UINT64_C (8388449)\\\\n#define __C_tp24_ UINT64_C (16777139)\\\\n#define __C_tp25_ UINT64_C (33554009)\\\\n#define __C_tp26_ UINT64_C (67108667)\\\\n#define __C_tp27_ UINT64_C (134217437)\\\\n#define __C_tp28_ UINT64_C (268435007)\\\\n#define __C_tp29_ UINT64_C (536870837)\\\\n#define __C_tp30_ UINT64_C (1073741717)\\\\n#define __C_tp31_ UINT64_C (2147482949)\\\\n#define __C_tp32_ UINT64_C (4294965839)\\\\n#define __C_tp33_ UINT64_C (8589934289)\\\\n#define __C_tp34_ UINT64_C (17179868807)\\\\n#define __C_tp35_ UINT64_C (34359737297)\\\\n#define __C_tp36_ UINT64_C (68719476389)\\\\n#define __C_tp37_ UINT64_C (137438953271)\\\\n#define __C_tp38_ UINT64_C (274877906627)\\\\n#define __C_tp39_ UINT64_C (549755813357)\\\\n#define __C_tp40_ UINT64_C (1099511626397)\\\\n#define __C_tp41_ UINT64_C (2199023255477)\\\\n#define __C_tp42_ UINT64_C (4398046509737)\\\\n#define __C_tp43_ UINT64_C (8796093021407)\\\\n#define __C_tp44_ UINT64_C (17592186044297)\\\\n#define __C_tp45_ UINT64_C (35184372088319)\\\\n#define __C_tp46_ UINT64_C (70368744176777)\\\\n#define __C_tp47_ UINT64_C (140737488353699)\\\\n#define __C_tp48_ UINT64_C (281474976710129)\\\\n#define __C_tp49_ UINT64_C (562949953419317)\\\\n#define __C_tp50_ UINT64_C (1125899906841971)\\\\n#define __C_tp51_ UINT64_C (2251799813684459)\\\\n#define __C_tp52_ UINT64_C (4503599627369861)\\\\n#define __C_tp53_ UINT64_C (9007199254738541)\\\\n#define __C_tp54_ UINT64_C (18014398509481727)\\\\n#define __C_tp55_ UINT64_C (36028797018963797)\\\\n#define __C_tp56_ UINT64_C (72057594037925807)\\\\n#define __C_tp57_ UINT64_C (144115188075854267)\\\\n#define __C_tp58_ UINT64_C (288230376151709777)\\\\n#define __C_tp59_ UINT64_C (576460752303422429)\\\\n#define __C_tp60_ UINT64_C (1152921504606845471)\\\\n#define __C_tp61_ UINT64_C (2305843009213692029)\\\\n#define __C_tp62_ UINT64_C (4611686018427386201)\\\\n#define __C_tp63_ UINT64_C (9223372036854774509)\\\\n#define __C_tp64_ UINT64_C (18446744073709550771)\\\\n\\\\n#define __P_quote_helper_(content) #content\\\\n#define quote$(content) __P_quote_helper_ (content)\\\\n\\\\n#define __P_cat_helper_(c, d) c##d\\\\n#define cat$(c, d) __P_cat_helper_ (c, d)\\\\n\\\\n#define uniq$(content) cat$ (cat$ (U_, __COUNTER__), _##content##_)\\\\n\\\\n#define empty$(...) (sizeof (quote$ (__VA_ARGS__)) == sizeof (\\\\\\\"\\\\\\\"))\\\\n\\\\n#ifndef offsetof\\\\n#define offsetof(type, mbr) ((uptr)(&(((type *)0)->mbr)))\\\\n#endif\\\\n#define container_of(ptr, type, mbr)                                          \\\\\\\\\\\\n  ((type *)(((byte *)(ptr)) - offsetof (type, mbr)))\\\\n\\\\n#define packetof(data, container)                                             \\\\\\\\\\\\n  ((container *)((byte *)(data) - sizeof (container)))\\\\n#define dataof(packet, datatype)                                              \\\\\\\\\\\\n  ((datatype *)((byte *)(packet) + sizeof (*(packet))))\\\\n\\\\n#define typewarn$(x, y) (!!(sizeof ((typeof (x) *)1 == (typeof (y) *)1)))\\\\n\\\\n#define umax(i, j)                                                            \\\\\\\\\\\\n  ({                                                                          \\\\\\\\\\\\n    (void)typewarn$ (i, j);                                                   \\\\\\\\\\\\n    sizeof (union {                                                           \\\\\\\\\\\\n      byte uniq$ (u)[i];                                                      \\\\\\\\\\\\n      byte uniq$ (v)[j];                                                      \\\\\\\\\\\\n    });                                                                       \\\\\\\\\\\\n  })\\\\n#define umin(i, j) (umax (i, j) ^ (i) ^ (j))\\\\n\\\\n#define ice$(expr)                                                            \\\\\\\\\\\\n  (sizeof (uptr) == sizeof (*(1 ? (void *)(((uptr)(expr)) * 0) : (uptr *)1)))\\\\n\\\\n#ifdef __GNUC__\\\\n#define choose$(cond, expr_1, expr_2)                                         \\\\\\\\\\\\n  __builtin_choose_expr (cond, expr_1, expr_2)\\\\n#else\\\\n#define choose$(cond, expr_1, expr_2)                                         \\\\\\\\\\\\n  _Generic (1 ? (void *)((uptr)(!(uptr)(cond))) : (uptr *)1,                  \\\\\\\\\\\\n      uptr *: (expr_1),                                                       \\\\\\\\\\\\n      default: (expr_2))\\\\n#endif\\\\n\\\\n/* override expression */\\\\n#define ovre$(default, ...)                                                   \\\\\\\\\\\\n  choose$ (0 __VA_OPT__ (|| 1), ((void)0 __VA_OPT__ (, ) __VA_ARGS__), default)\\\\n/* override type */\\\\n#define ovrt$(default, ...)                                                   \\\\\\\\\\\\n  typeof (choose$ (0 __VA_OPT__ (|| 1),                                       \\\\\\\\\\\\n                   __VA_OPT__ ((typeof (__VA_ARGS__)){) 0 __VA_OPT__ (}),     \\\\\\\\\\\\n                   (typeof (default)){ 0 }))\\\\n\\\\n#define likely(cond) __builtin_expect (!!(cond), 1)\\\\n#define unlikely(cond) __builtin_expect (!!(cond), 0)\\\\n\\\\n#ifdef __GNUC__\\\\n#define typematch$(type_1, type_2, expr_1, expr_2)                            \\\\\\\\\\\\n  choose$ (__builtin_types_compatible_p (typeof (type_1), typeof (type_2)),   \\\\\\\\\\\\n           expr_1, expr_2)\\\\n#define lengthof(array)                                                       \\\\\\\\\\\\n  typematch$ (array, &(array)[0], ((void)0),                                  \\\\\\\\\\\\n              (sizeof (array) / sizeof ((array)[0])))\\\\n#else\\\\n#define typematch$(type_1, type_2, expr_1, expr_2)                            \\\\\\\\\\\\n  _Generic ((typeof (type_1)){ 0 },                                           \\\\\\\\\\\\n      typeof (type_2): (expr_1),                                              \\\\\\\\\\\\n      default: (expr_2))\\\\n#define lengthof(array) (sizeof (array) / sizeof ((array)[0]))\\\\n#endif\\\\n\\\\n#define dense$ __attribute__ ((__packed__))\\\\n#define inline$ inline __attribute__ ((__always_inline__))\\\\n#define pure$ __attribute__ ((__const__))\\\\n#define defer$(fn) __attribute__ ((__cleanup__ (fn)))\\\\n\\\\n#define __P_reducel_helper_(r, a, i, reducer, first, ...)                     \\\\\\\\\\\\n  ({                                                                          \\\\\\\\\\\\n    auto r = first;                                                           \\\\\\\\\\\\n    typeof (r) a[] = { __VA_ARGS__ };                                         \\\\\\\\\\\\n    for (usz i = 0; i < lengthof (a); ++i)                                    \\\\\\\\\\\\n      {                                                                       \\\\\\\\\\\\n        reducer (r, a[i]);                                                    \\\\\\\\\\\\n      }                                                                       \\\\\\\\\\\\n    r;                                                                        \\\\\\\\\\\\n  })\\\\n#define reducel(reducer, first, ...)                                          \\\\\\\\\\\\n  __P_reducel_helper_ (uniq$ (r), uniq$ (a), uniq$ (i), reducer,              \\\\\\\\\\\\n                       first __VA_OPT__ (, ) __VA_ARGS__)\\\\n\\\\n#define reduce$(cmd, ...) reducel (__P_##cmd##_reducer_, __VA_ARGS__)\\\\n\\\\n#define __P_add_reducer_(i, j) ((i) += (j))\\\\n#define Sigma$(...) reducel (__P_add_reducer_, __VA_ARGS__)\\\\n\\\\n#define __P_mul_reducer_(i, j) ((i) *= (j))\\\\n#define Pi$(...) reducel (__P_mul_reducer_, __VA_ARGS__)\\\\n\\\\n#define __P_xor_reducer_(i, j) ((i) ^= (j))\\\\n#define __P_or_reducer_(i, j) ((i) |= (j))\\\\n#define __P_and_reducer_(i, j) ((i) &= (j))\\\\n\\\\n#define __P_max_reducer_(i, j)                                                \\\\\\\\\\\\n  do                                                                          \\\\\\\\\\\\n    {                                                                         \\\\\\\\\\\\n      if ((i) < (j))                                                          \\\\\\\\\\\\n        (i) = (j);                                                            \\\\\\\\\\\\n    }                                                                         \\\\\\\\\\\\n  while (0)\\\\n#define max(x_1, x_2, ...)                                                    \\\\\\\\\\\\n  choose$ (__VA_OPT__ (1 ||) !ice$ (x_1) || !ice$ (x_2),                      \\\\\\\\\\\\n           reduce$ (max, x_1, x_2 __VA_OPT__ (, ) __VA_ARGS__),               \\\\\\\\\\\\n           ((x_1) > (x_2) ? (x_1) : (x_2)))\\\\n\\\\n#define __P_min_reducer_(i, j)                                                \\\\\\\\\\\\n  do                                                                          \\\\\\\\\\\\n    {                                                                         \\\\\\\\\\\\n      if ((i) > (j))                                                          \\\\\\\\\\\\n        (i) = (j);                                                            \\\\\\\\\\\\n    }                                                                         \\\\\\\\\\\\n  while (0)\\\\n#define min(x_1, x_2, ...)                                                    \\\\\\\\\\\\n  choose$ (__VA_OPT__ (1 ||) !ice$ (x_1) || !ice$ (x_2),                      \\\\\\\\\\\\n           reduce$ (min, x_1, x_2 __VA_OPT__ (, ) __VA_ARGS__),               \\\\\\\\\\\\n           ((x_1) < (x_2) ? (x_1) : (x_2)))\\\\n\\\\n#define __P_swap_helper_(t, i, j)                                             \\\\\\\\\\\\n  ({                                                                          \\\\\\\\\\\\n    (void)typewarn$ (i, j);                                                   \\\\\\\\\\\\n    auto t = i;                                                               \\\\\\\\\\\\n    (i) = j;                                                                  \\\\\\\\\\\\n    (j) = t;                                                                  \\\\\\\\\\\\n    t;                                                                        \\\\\\\\\\\\n  })\\\\n#define swap(i, j) __P_swap_helper_ (uniq$ (t), i, j)\\\\n\\\\n#define __P_lambda_helper_(fn, type, function) ({ type fn function fn; })\\\\n#define lambda(type, function) __P_lambda_helper_ (uniq$ (fn), type, function)\\\\n\\\\n/******************************* smart pointer *******************************/\\\\n\\\\n#define __P_move_helper_(ret, smart_pointer)                                  \\\\\\\\\\\\n  ({                                                                          \\\\\\\\\\\\n    auto ret = smart_pointer;                                                 \\\\\\\\\\\\n    (smart_pointer) = null;                                                   \\\\\\\\\\\\n    ret;                                                                      \\\\\\\\\\\\n  })\\\\n#define move$(smart_pointer) __P_move_helper_ (uniq$ (ret), smart_pointer)\\\\n\\\\n#define __P_smart_delete_(instance, ...) free (__VA_ARGS__ (instance))\\\\n\\\\n#define __P_smart_uninit_helper_(pp, instance, pp_finder)                     \\\\\\\\\\\\n  ({                                                                          \\\\\\\\\\\\n    auto pp = (void *(*)(void *))pp_finder (instance);                        \\\\\\\\\\\\n    pp == null ? (instance) : pp (instance);                                  \\\\\\\\\\\\n  })\\\\n#define __P_smart_uninit_(instance, pp_finder)                                \\\\\\\\\\\\n  __P_smart_uninit_helper_ (uniq$ (pp), instance, pp_finder)\\\\n\\\\n#define __P_get_callback_(instance)                                           \\\\\\\\\\\\n  ((instance) == null ? null : *(void **)(instance))\\\\n\\\\n#ifndef smartimpl$\\\\n#define smartimpl$(...)                                                       \\\\\\\\\\\\n  __VA_ARGS__ void $tatic (free) (void *pinstance)                            \\\\\\\\\\\\n  {                                                                           \\\\\\\\\\\\n    __P_smart_delete_ (*(void **)pinstance);                                  \\\\\\\\\\\\n  }                                                                           \\\\\\\\\\\\n  __VA_ARGS__ void *$tatic (uninit) (void *instance)                          \\\\\\\\\\\\n  {                                                                           \\\\\\\\\\\\n    return __P_smart_uninit_ (instance, __P_get_callback_);                   \\\\\\\\\\\\n  }                                                                           \\\\\\\\\\\\n  __VA_ARGS__ void $tatic (delete) (void *pinstance)                          \\\\\\\\\\\\n  {                                                                           \\\\\\\\\\\\n    __P_smart_delete_ (*(void **)pinstance, $tatic (uninit));                 \\\\\\\\\\\\n  }                                                                           \\\\\\\\\\\\n  __VA_ARGS__ void $tatic (fclose) (void *pstream)                            \\\\\\\\\\\\n  {                                                                           \\\\\\\\\\\\n    if (*(void **)pstream == null)                                            \\\\\\\\\\\\n      return;                                                                 \\\\\\\\\\\\n    fclose (*(void **)pstream);                                               \\\\\\\\\\\\n  }\\\\nsmartimpl$ (static inline);\\\\n#endif\\\\n#define smartptr defer$ ($tatic (free))\\\\n#define auto$ defer$ ($tatic (uninit))\\\\n#define smart$ defer$ ($tatic (delete))\\\\n#define smartfile defer$ ($tatic (fclose))\\\\n\\\\n#define uninit$(instance) $tatic (uninit) (instance)\\\\n#define delete$(instance) __P_smart_delete_ (instance, $tatic (uninit))\\\\n\\\\n/******************************* smart pointer *******************************/\\\\n\\\\n#define mallocl(...) malloc (Sigma$ (__VA_ARGS__))\\\\n#define callocl(...) calloc (1, Sigma$ (__VA_ARGS__))\\\\n#define reallocl(ptr, ...) realloc (ptr, Sigma$ (__VA_ARGS__))\\\\n#define allocal(...) alloca (Sigma$ (__VA_ARGS__))\\\\n\\\\n/******************************* pseudo class ********************************/\\\\n\\\\n#define fn$(fn) __D_##fn##_\\\\n#define $fn(class, fn) $tatic (class##_##fn)\\\\n#define mbr$(mbr) __M_##mbr##_\\\\n\\\\n/*\\\\nBe careful of default argument promotions on trailing arguments:\\\\n - float arguments are converted to double as in floating-point promotion\\\\n - bool, char, short, and unscoped enumerations are converted to int or wider\\\\ninteger types as in integer promotion\\\\n*/\\\\n\\\\n#define fx$(fn, ...) (*fn$ (fn)) (void *__VA_OPT__ (, ) __VA_ARGS__, ...)\\\\n#define $fx(class, fn, ...)                                                   \\\\\\\\\\\\n  $fn (class, fn) (struct class * this __VA_OPT__ (, ) __VA_ARGS__)\\\\n\\\\n#define bind$(class, fn, ptr) ((ptr)->fn$ (fn) = (void *)$fn (class, fn))\\\\n\\\\n#define __P_call_helper_(p, ptr, fn, ...)                                     \\\\\\\\\\\\n  ({                                                                          \\\\\\\\\\\\n    auto p = ptr;                                                             \\\\\\\\\\\\n    p->fn$ (fn) (p __VA_OPT__ (, ) __VA_ARGS__);                              \\\\\\\\\\\\n  })\\\\n#define call$(ptr, fn, ...)                                                   \\\\\\\\\\\\n  __P_call_helper_ (uniq$ (p), ptr, fn __VA_OPT__ (, ) __VA_ARGS__)\\\\n#define $call(class, fn, ...) ($fn (class, fn) (__VA_ARGS__))\\\\n\\\\n#define class$(name, structure)                                               \\\\\\\\\\\\n  struct name                                                                 \\\\\\\\\\\\n  {                                                                           \\\\\\\\\\\\n    struct name *fx$ (uninit);                                                \\\\\\\\\\\\n    struct structure;                                                         \\\\\\\\\\\\n  }\\\\n\\\\n#define new$(class, ...)                                                      \\\\\\\\\\\\n  $call (class, init,                                                         \\\\\\\\\\\\n         mallocl (sizeof (struct class) __VA_OPT__ (, ) __VA_ARGS__))\\\\n\\\\n#define let$(var, class, ...)                                                 \\\\\\\\\\\\n  smart$ struct class *var = (void *)new$ (class __VA_OPT__ (, ) __VA_ARGS__)\\\\n\\\\n/******************************* pseudo class ********************************/\\\\n\\\\n/***************************** pseudo coroutine ******************************/\\\\n\\\\ntypedef typeof (__LINE__) coroutine;\\\\n\\\\n/* mbr$ (progcnt) should be zeroed */\\\\n#define co$(name, structure)                                                  \\\\\\\\\\\\n  struct name                                                                 \\\\\\\\\\\\n  {                                                                           \\\\\\\\\\\\n    coroutine mbr$ (progcnt);                                                 \\\\\\\\\\\\n    struct structure;                                                         \\\\\\\\\\\\n  }\\\\n\\\\n/* type fn ([coptr,] ...) async$ (coptr) { ...; exit$ (ret); } */\\\\n#define async$(coptr)                                                         \\\\\\\\\\\\n  {                                                                           \\\\\\\\\\\\n    auto this = coptr;                                                        \\\\\\\\\\\\n    switch (*(coroutine *)this)                                               \\\\\\\\\\\\n      {                                                                       \\\\\\\\\\\\n      default:;\\\\n\\\\n#define __P_async_helper_(ctx, structure, ...)                                \\\\\\\\\\\\n  async$ (({                                                                  \\\\\\\\\\\\n    static __VA_ARGS__ co$ (, structure) ctx;                                 \\\\\\\\\\\\n    &ctx;                                                                     \\\\\\\\\\\\n  }))\\\\n/* type fn (...) $async ({...}[, keyword]) { ...; exit$ (ret); } */\\\\n#define $async(structure, ...)                                                \\\\\\\\\\\\n  __P_async_helper_ (uniq$ (ctx), structure __VA_OPT__ (, ) __VA_ARGS__)\\\\n\\\\n#define yield$(...)                                                           \\\\\\\\\\\\n  do                                                                          \\\\\\\\\\\\n    {                                                                         \\\\\\\\\\\\n      *(coroutine *)this = __LINE__;                                          \\\\\\\\\\\\n      return __VA_ARGS__;                                                     \\\\\\\\\\\\n    case __LINE__:;                                                           \\\\\\\\\\\\n    }                                                                         \\\\\\\\\\\\n  while (0)\\\\n\\\\n#define loop$(...)                                                            \\\\\\\\\\\\n  do                                                                          \\\\\\\\\\\\n    {                                                                         \\\\\\\\\\\\n      *(coroutine *)this = 0;                                                 \\\\\\\\\\\\n      return __VA_ARGS__;                                                     \\\\\\\\\\\\n    }                                                                         \\\\\\\\\\\\n  while (0)\\\\n\\\\n#define __P_await_helper_(r, call, target, ret)                               \\\\\\\\\\\\n  ({                                                                          \\\\\\\\\\\\n    typeof (call) r;                                                          \\\\\\\\\\\\n    for (;;)                                                                  \\\\\\\\\\\\n      {                                                                       \\\\\\\\\\\\n        r = call;                                                             \\\\\\\\\\\\n        if (target (r))                                                       \\\\\\\\\\\\n          break;                                                              \\\\\\\\\\\\n        yield$ (ret);                                                         \\\\\\\\\\\\n      }                                                                       \\\\\\\\\\\\n    r;                                                                        \\\\\\\\\\\\n  })\\\\n#define __P_await_3_(call, target, ret)                                       \\\\\\\\\\\\n  __P_await_helper_ (uniq$ (r), call, target, ret)\\\\n#define __P_await_2_(call, target, ...) __P_await_3_ (call, target, 0)\\\\n#define __P_await_1_(call, ...) __P_await_2_ (call, )\\\\n#define __P_await_va_(a_1, a_2, a_3, argc, ...)                               \\\\\\\\\\\\n  cat$ (__P_await_, argc##_) (a_1, a_2, a_3)\\\\n#define await$(call, ...)                                                     \\\\\\\\\\\\n  __P_await_va_ (call, __VA_ARGS__ __VA_OPT__ (, ) 3, 2, 1)\\\\n\\\\n/* exit$ must be called directly at the end of each coroutine */\\\\n#define exit$(...)                                                            \\\\\\\\\\\\n  }                                                                           \\\\\\\\\\\\n  yield$ (__VA_ARGS__);                                                       \\\\\\\\\\\\n  }                                                                           \\\\\\\\\\\\n  return __VA_ARGS__\\\\n\\\\n/***************************** pseudo coroutine ******************************/\\\\n\\\\n#ifdef __clang__\\\\n#define print_struct(ptr) __builtin_dump_struct (ptr, printf)\\\\n#endif\\\\n\\\\n/*********************************** math ************************************/\\\\n\\\\n#define __P_gcd_helper_(i, j, r, x, y)                                        \\\\\\\\\\\\n  ({                                                                          \\\\\\\\\\\\n    auto i = x;                                                               \\\\\\\\\\\\n    auto j = y;                                                               \\\\\\\\\\\\n    while (j)                                                                 \\\\\\\\\\\\n      {                                                                       \\\\\\\\\\\\n        auto r = i % j;                                                       \\\\\\\\\\\\n        i = j;                                                                \\\\\\\\\\\\n        j = r;                                                                \\\\\\\\\\\\n      }                                                                       \\\\\\\\\\\\n    i;                                                                        \\\\\\\\\\\\n  })\\\\n#define __P_gcd_(x, y) __P_gcd_helper_ (uniq$ (i), uniq$ (j), uniq$ (r), x, y)\\\\n\\\\n#define __P_lcm_helper_(i, j, r, x, y)                                        \\\\\\\\\\\\n  ({                                                                          \\\\\\\\\\\\n    auto i = x;                                                               \\\\\\\\\\\\n    auto j = y;                                                               \\\\\\\\\\\\n    auto r = __P_gcd_ (i, j);                                                 \\\\\\\\\\\\n    r ? (i / r) * j : 0;                                                      \\\\\\\\\\\\n  })\\\\n#define __P_lcm_(x, y) __P_lcm_helper_ (uniq$ (i), uniq$ (j), uniq$ (r), x, y)\\\\n\\\\n#define __P_gcd_reducer_(x, y) ((x) = __P_gcd_ (x, y))\\\\n/* single line trick: while ((x) && (x %= y ^= x ^= y ^= x)); */\\\\n#define gcd(x_1, x_2, ...) reduce$ (gcd, x_1, x_2 __VA_OPT__ (, ) __VA_ARGS__)\\\\n\\\\n#define __P_lcm_reducer_(x, y) ((x) = __P_lcm_ (x, y))\\\\n#define lcm(x_1, x_2, ...) reduce$ (lcm, x_1, x_2 __VA_OPT__ (, ) __VA_ARGS__)\\\\n\\\\n#define __P_lowbit_helper_(t, x)                                              \\\\\\\\\\\\n  ({                                                                          \\\\\\\\\\\\n    auto t = x;                                                               \\\\\\\\\\\\n    t & -t;                                                                   \\\\\\\\\\\\n  })\\\\n#define __P_lowbit_(x) __P_lowbit_helper_ (uniq$ (t), x)\\\\n#define lowbit(x) choose$ (ice$ (x), ((x) & -(x)), __P_lowbit_ (x))\\\\n\\\\n#define __P_qpow_helper_(b, res, e, base, exp, ...)                           \\\\\\\\\\\\n  ({                                                                          \\\\\\\\\\\\n    auto b = (base)__VA_OPT__ (% (__VA_ARGS__));                              \\\\\\\\\\\\n    auto res = (typeof (b)){ 1 };                                             \\\\\\\\\\\\n    for (auto e = exp; e; e >>= 1)                                            \\\\\\\\\\\\n      {                                                                       \\\\\\\\\\\\n        res = (res * ((e & 1) * (b ^ 1) ^ 1)) __VA_OPT__ (% (__VA_ARGS__));   \\\\\\\\\\\\n        b = (b * b) __VA_OPT__ (% (__VA_ARGS__));                             \\\\\\\\\\\\n      }                                                                       \\\\\\\\\\\\n    res;                                                                      \\\\\\\\\\\\n  })\\\\n#define qpow(base, exp, ...)                                                  \\\\\\\\\\\\n  __P_qpow_helper_ (uniq$ (b), uniq$ (res), uniq$ (e), base,                  \\\\\\\\\\\\n                    exp __VA_OPT__ (, ) __VA_ARGS__)\\\\n\\\\n/*********************************** math ************************************/\\\\n\\\\n/********************************** bitset ***********************************/\\\\n\\\\n#define bitbyte$(array, index) (((byte *)(array))[(usz)(index) >> 3])\\\\n#define bitbit$(index) (1u << ((index) & (7u)))\\\\n#define __P_bitdo_helper_(i, op, array, index)                                \\\\\\\\\\\\n  ({                                                                          \\\\\\\\\\\\n    auto i = (usz)(index);                                                    \\\\\\\\\\\\n    bitbyte$ (array, i) op bitbit$ (i);                                       \\\\\\\\\\\\n  })\\\\n#define bitdo$(op, array, index)                                              \\\\\\\\\\\\n  __P_bitdo_helper_ (uniq$ (i), op, array, index)\\\\n#define bitget$(array, index) bitdo$ (&, array, index)\\\\n#define bitput$(array, index) bitdo$ (|=, array, index)\\\\n#define bitclear$(array, index) bitdo$ (&= ~, array, index)\\\\n#define bitflip$(array, index) bitdo$ (^=, array, index)\\\\n\\\\n/********************************** bitset ***********************************/\\\\n\\\\n/******************************* dynamic array *******************************/\\\\n\\\\n#define daexp$ 2\\\\n#define dadyn$ 1\\\\n#define dalb$ (daexp$ - dadyn$)\\\\n#define daub$ (daexp$ + dadyn$)\\\\n\\\\n#define __P_dynarr_helper_(uc, us, r, capacity, size, page)                   \\\\\\\\\\\\n  ({                                                                          \\\\\\\\\\\\n    auto uc = (usz)(capacity) / (page);                                       \\\\\\\\\\\\n    auto us = (usz)(size) / (page);                                           \\\\\\\\\\\\n    usz r = uc;                                                               \\\\\\\\\\\\n    if (us <= daub$)                                                          \\\\\\\\\\\\n      r = daub$ + dadyn$ + 1;                                                 \\\\\\\\\\\\n    else if (us >= uc || us <= uc * dalb$ / daub$)                            \\\\\\\\\\\\n      r = us * daub$ / daexp$;                                                \\\\\\\\\\\\n    (page) * r;                                                               \\\\\\\\\\\\n  })\\\\n#define dynarr$(capacity, size, ...)                                          \\\\\\\\\\\\n  __P_dynarr_helper_ (                                                        \\\\\\\\\\\\n      uniq$ (uc), uniq$ (us), uniq$ (r), capacity, size,                      \\\\\\\\\\\\n      umax (sizeof (int), (usz)0 __VA_OPT__ (| (__VA_ARGS__))))\\\\n\\\\n/******************************* dynamic array *******************************/\\\\n\\\\n/***************************** Xor Address PaiR ******************************/\\\\n\\\\ntypedef uptr xapr;\\\\n#define xapr$(cmd) XAPR_##cmd##_\\\\n#define XAPR_otr_(pair, nbr)                                                  \\\\\\\\\\\\n  ((xapr *)((byte *)0 + (*(xapr *)(pair) ^ (xapr)(nbr))))\\\\n#define __P_XAPR_ins_helper_(upair, un_1, un_2, pair, n_1, n_2)               \\\\\\\\\\\\n  ({                                                                          \\\\\\\\\\\\n    auto upair = (xapr *)(pair);                                              \\\\\\\\\\\\n    auto un_1 = (xapr *)(n_1);                                                \\\\\\\\\\\\n    auto un_2 = (xapr *)(n_2);                                                \\\\\\\\\\\\n    *upair = (xapr)un_1 ^ (xapr)un_2;                                         \\\\\\\\\\\\n    *un_1 ^= (xapr)un_2 ^ (xapr)upair;                                        \\\\\\\\\\\\n    *un_2 ^= (xapr)un_1 ^ (xapr)upair;                                        \\\\\\\\\\\\n    upair;                                                                    \\\\\\\\\\\\n  })\\\\n#define XAPR_ins_(pair, n_1, n_2)                                             \\\\\\\\\\\\n  __P_XAPR_ins_helper_ (uniq$ (upair), uniq$ (un_1), uniq$ (un_2), pair, n_1, \\\\\\\\\\\\n                        n_2)\\\\n#define __P_XAPR_rem_helper_(upair, unbr, uotr, pair, nbr)                    \\\\\\\\\\\\n  ({                                                                          \\\\\\\\\\\\n    auto upair = (xapr *)(pair);                                              \\\\\\\\\\\\n    auto unbr = (xapr *)(nbr);                                                \\\\\\\\\\\\n    auto uotr = xapr$ (otr) (upair, unbr);                                    \\\\\\\\\\\\n    *unbr ^= (xapr)uotr ^ (xapr)upair;                                        \\\\\\\\\\\\n    *uotr ^= (xapr)unbr ^ (xapr)upair;                                        \\\\\\\\\\\\n    uotr;                                                                     \\\\\\\\\\\\n  })\\\\n#define XAPR_rem_(pair, nbr)                                                  \\\\\\\\\\\\n  __P_XAPR_rem_helper_ (uniq$ (upair), uniq$ (unbr), uniq$ (uotr), pair, nbr)\\\\n\\\\n/***************************** Xor Address PaiR ******************************/\\\\n\\\\n/****************************** xor linked list ******************************/\\\\n\\\\n#define list$(cmd) LS_##cmd##_\\\\n#define LS_ins_helper_(uxpr, uprev, unext, ufirst, ulast, xpr, prev, next,    \\\\\\\\\\\\n                       first, last)                                           \\\\\\\\\\\\n  ({                                                                          \\\\\\\\\\\\n    auto uxpr = (xapr *)(xpr);                                                \\\\\\\\\\\\n    auto uprev = (xapr *)(prev);                                              \\\\\\\\\\\\n    auto unext = (xapr *)(next);                                              \\\\\\\\\\\\n    auto ufirst = (xapr **)(first);                                           \\\\\\\\\\\\n    auto ulast = (xapr **)(last);                                             \\\\\\\\\\\\n    if (uprev == null && unext == null)                                       \\\\\\\\\\\\n      {                                                                       \\\\\\\\\\\\n        *uxpr = 0;                                                            \\\\\\\\\\\\n        *ufirst = *ulast = uxpr;                                              \\\\\\\\\\\\n      }                                                                       \\\\\\\\\\\\n    else if (uprev == null)                                                   \\\\\\\\\\\\n      *ufirst = xapr$ (ins) (uxpr, *ufirst, *ulast);                          \\\\\\\\\\\\n    else if (unext == null)                                                   \\\\\\\\\\\\n      *ulast = xapr$ (ins) (uxpr, *ufirst, *ulast);                           \\\\\\\\\\\\n    else                                                                      \\\\\\\\\\\\n      xapr$ (ins) (uxpr, uprev, unext);                                       \\\\\\\\\\\\n    uxpr;                                                                     \\\\\\\\\\\\n  })\\\\n#define LS_ins_(xpr, prev, next, first, last)                                 \\\\\\\\\\\\n  list$ (ins_helper) (uniq$ (uxpr), uniq$ (uprev), uniq$ (unext),             \\\\\\\\\\\\n                      uniq$ (ufirst), uniq$ (ulast), xpr, prev, next, first,  \\\\\\\\\\\\n                      last)\\\\n#define LS_rem_helper_(uxpr, unbr, ufirst, ulast, xpr, nbr, first, last)      \\\\\\\\\\\\n  ({                                                                          \\\\\\\\\\\\n    auto uxpr = (xapr *)(xpr);                                                \\\\\\\\\\\\n    auto unbr = (xapr *)(nbr);                                                \\\\\\\\\\\\n    auto ufirst = (xapr **)(first);                                           \\\\\\\\\\\\n    auto ulast = (xapr **)(last);                                             \\\\\\\\\\\\n    if (uxpr == unbr)                                                         \\\\\\\\\\\\n      *ufirst = *ulast = null;                                                \\\\\\\\\\\\n    else if (uxpr == *ufirst)                                                 \\\\\\\\\\\\n      *ufirst = xapr$ (rem) (uxpr, *ulast);                                   \\\\\\\\\\\\n    else if (uxpr == *ulast)                                                  \\\\\\\\\\\\n      *ulast = xapr$ (rem) (uxpr, *ufirst);                                   \\\\\\\\\\\\n    else                                                                      \\\\\\\\\\\\n      xapr$ (rem) (uxpr, unbr);                                               \\\\\\\\\\\\n    uxpr;                                                                     \\\\\\\\\\\\n  })\\\\n#define LS_rem_(xpr, nbr, first, last)                                        \\\\\\\\\\\\n  list$ (rem_helper) (uniq$ (uxpr), uniq$ (unbr), uniq$ (ufirst),             \\\\\\\\\\\\n                      uniq$ (ulast), xpr, nbr, first, last)\\\\n#define LS_unshift_helper_(ufirst, xpr, first, last)                          \\\\\\\\\\\\n  ({                                                                          \\\\\\\\\\\\n    auto ufirst = (xapr **)(first);                                           \\\\\\\\\\\\n    list$ (ins) (xpr, null, *ufirst, ufirst, last);                           \\\\\\\\\\\\n  })\\\\n#define LS_unshift_(xpr, first, last)                                         \\\\\\\\\\\\n  list$ (unshift_helper) (uniq$ (ufirst), xpr, first, last);\\\\n#define LS_shift_helper_(ufirst, ulast, first, last)                          \\\\\\\\\\\\n  ({                                                                          \\\\\\\\\\\\n    auto ufirst = (xapr **)(first);                                           \\\\\\\\\\\\n    auto ulast = (xapr **)(last);                                             \\\\\\\\\\\\n    list$ (rem) (*ufirst, *ulast, ufirst, ulast);                             \\\\\\\\\\\\n  })\\\\n#define LS_shift_(first, last)                                                \\\\\\\\\\\\n  list$ (shift_helper) (uniq$ (ufirst), uniq$ (ulast), first, last)\\\\n#define LS_push_helper_(ulast, xpr, first, last)                              \\\\\\\\\\\\n  ({                                                                          \\\\\\\\\\\\n    auto ulast = (xapr **)(last);                                             \\\\\\\\\\\\n    list$ (ins) (xpr, *ulast, null, first, ulast);                            \\\\\\\\\\\\n  })\\\\n#define LS_push_(xpr, first, last)                                            \\\\\\\\\\\\n  list$ (push_helper) (uniq$ (ulast), xpr, first, last);\\\\n#define LS_pop_helper_(ufirst, ulast, first, last)                            \\\\\\\\\\\\n  ({                                                                          \\\\\\\\\\\\n    auto ufirst = (xapr **)(first);                                           \\\\\\\\\\\\n    auto ulast = (xapr **)(last);                                             \\\\\\\\\\\\n    list$ (rem) (*ulast, *ufirst, ufirst, ulast);                             \\\\\\\\\\\\n  })\\\\n#define LS_pop_(first, last)                                                  \\\\\\\\\\\\n  list$ (pop_helper) (uniq$ (ufirst), uniq$ (ulast), first, last)\\\\n\\\\n#define __P_lsfor_helper_(f, i, var, zeroth, first, last)                     \\\\\\\\\\\\n  for (xapr *f = (xapr *)&f, *i = (xapr *)(zeroth), *var = (xapr *)(first);   \\\\\\\\\\\\n       f != (last); i = xapr$ (otr) (var, i), f = swap (var, i))\\\\n#define __P_lsfor_4_(var, zeroth, first, last)                                \\\\\\\\\\\\n  __P_lsfor_helper_ (uniq$ (f), uniq$ (i), var, zeroth, first, last)\\\\n#define __P_lsfor_3_(var, first, last, ...)                                   \\\\\\\\\\\\n  __P_lsfor_4_ (var, last, first, last)\\\\n#define __P_lsfor_va_(a_1, a_2, a_3, a_4, argc, ...)                          \\\\\\\\\\\\n  cat$ (__P_lsfor_, argc##_) (a_1, a_2, a_3, a_4)\\\\n#define lsfor$(var, xpr_1, xpr_2, ...)                                        \\\\\\\\\\\\n  __P_lsfor_va_ (var, xpr_1, xpr_2, __VA_ARGS__ __VA_OPT__ (, ) 4, 3)\\\\n\\\\n#define __P_lsfree_helper_(ufirst, ulast, i, first, last, ...)                \\\\\\\\\\\\n  do                                                                          \\\\\\\\\\\\n    {                                                                         \\\\\\\\\\\\n      auto ufirst = (xapr **)(first);                                         \\\\\\\\\\\\n      auto ulast = (xapr **)(last);                                           \\\\\\\\\\\\n      xapr *i;                                                                \\\\\\\\\\\\n      do                                                                      \\\\\\\\\\\\n        {                                                                     \\\\\\\\\\\\n          i = list$ (shift) (ufirst, ulast);                                  \\\\\\\\\\\\n          __VA_ARGS__ (dataof (i, void));                                     \\\\\\\\\\\\n          free (i);                                                           \\\\\\\\\\\\n        }                                                                     \\\\\\\\\\\\n      while (i);                                                              \\\\\\\\\\\\n    }                                                                         \\\\\\\\\\\\n  while (0)\\\\n#define lsfree$(first, last, ...)                                             \\\\\\\\\\\\n  __P_lsfree_helper_ (uniq$ (ufirst), uniq$ (ulast), uniq$ (i), first,        \\\\\\\\\\\\n                      last __VA_OPT__ (, ) __VA_ARGS__)\\\\n\\\\n/****************************** xor linked list ******************************/\\\\n\\\\n#define __P_memhash_helper_(umemb, usize, m, res, i, memb, size, mod)         \\\\\\\\\\\\n  ({                                                                          \\\\\\\\\\\\n    auto umemb = (byte *)(memb);                                              \\\\\\\\\\\\n    auto usize = (usz)(size);                                                 \\\\\\\\\\\\n    auto m = mod;                                                             \\\\\\\\\\\\n    auto res = (typeof (m)){ 0 };                                             \\\\\\\\\\\\n    for (usz i = 0; i < usize; ++i)                                           \\\\\\\\\\\\n      res = (res << 8 ^ umemb[i]) % m;                                        \\\\\\\\\\\\n    res;                                                                      \\\\\\\\\\\\n  })\\\\n#define __P_memhash_3_(memb, size, mod)                                       \\\\\\\\\\\\n  __P_memhash_helper_ (uniq$ (umemb), uniq$ (usize), uniq$ (m), uniq$ (res),  \\\\\\\\\\\\n                       uniq$ (i), memb, size, mod)\\\\n#define __P_memhash_2_(memb, size, ...)                                       \\\\\\\\\\\\n  __P_memhash_3_ (memb, size, con$t (tp56))\\\\n#define __P_memhash_1_(memb, ...) __P_memhash_2_ (memb, sizeof (memb))\\\\n#define __P_memhash_va_(a_1, a_2, a_3, argc, ...)                             \\\\\\\\\\\\n  cat$ (__P_memhash_, argc##_) (a_1, a_2, a_3)\\\\n#define memhash(memb, ...)                                                    \\\\\\\\\\\\n  __P_memhash_va_ (memb, __VA_ARGS__ __VA_OPT__ (, ) 3, 2, 1)\\\\n\\\\n#define __P_strhash_helper_(ustr, m, res, i, str, mod)                        \\\\\\\\\\\\n  ({                                                                          \\\\\\\\\\\\n    auto ustr = (byte *)(str);                                                \\\\\\\\\\\\n    auto m = mod;                                                             \\\\\\\\\\\\n    auto res = (typeof (m)){ 0 };                                             \\\\\\\\\\\\n    for (usz i = 0; ustr[i]; ++i)                                             \\\\\\\\\\\\n      res = (res << 8 ^ ustr[i]) % m;                                         \\\\\\\\\\\\n    res;                                                                      \\\\\\\\\\\\n  })\\\\n#define __P_strhash_2_(str, mod)                                              \\\\\\\\\\\\n  __P_strhash_helper_ (uniq$ (ustr), uniq$ (m), uniq$ (res), uniq$ (i), str,  \\\\\\\\\\\\n                       mod)\\\\n#define __P_strhash_1_(str, ...) __P_strhash_2_ (str, con$t (tp56))\\\\n#define __P_strhash_va_(a_1, a_2, argc, ...)                                  \\\\\\\\\\\\n  cat$ (__P_strhash_, argc##_) (a_1, a_2)\\\\n#define strhash(str, ...)                                                     \\\\\\\\\\\\n  __P_strhash_va_ (str, __VA_ARGS__ __VA_OPT__ (, ) 2, 1)\\\\n\\\\n/************************************ I/O ************************************/\\\\n\\\\n#if !defined __P_UNLOCKED_STDIO_ && defined __USE_POSIX199506\\\\n#define __P_UNLOCKED_STDIO_ 1\\\\n#define __P_getchar_worker_ getchar_unlocked\\\\n#define __P_getc_worker_ getc_unlocked\\\\n#define __P_putchar_worker_ putchar_unlocked\\\\n#define __P_putc_worker_ putc_unlocked\\\\n#elif defined _WIN32\\\\n#define __P_UNLOCKED_STDIO_ 32\\\\n#define __P_getchar_worker_ _getchar_nolock\\\\n#define __P_getc_worker_ _getc_nolock\\\\n#define __P_putchar_worker_ _putchar_nolock\\\\n#define __P_putc_worker_ _putc_nolock\\\\n#endif\\\\n#if (__P_UNLOCKED_STDIO_ + 0) == 1 && defined __USE_GNU\\\\n#undef __P_UNLOCKED_STDIO_\\\\n#define __P_UNLOCKED_STDIO_ 3\\\\n#define __P_fgets_worker_ fgets_unlocked\\\\n#define __P_fputs_worker_ fputs_unlocked\\\\n#endif\\\\n\\\\n/* fallback */\\\\n\\\\n#ifndef __P_getchar_worker_\\\\n#define __P_getchar_worker_ getchar\\\\n#endif\\\\n#ifndef __P_getc_worker_\\\\n#define __P_getc_worker_ getc\\\\n#endif\\\\n#ifndef __P_putchar_worker_\\\\n#define __P_putchar_worker_ putchar\\\\n#endif\\\\n#ifndef __P_putc_worker_\\\\n#define __P_putc_worker_ putc\\\\n#endif\\\\n#ifndef __P_fgets_worker_\\\\n#define __P_fgets_worker_ fgets\\\\n#endif\\\\n#ifndef __P_fputs_worker_\\\\n#define __P_fputs_worker_ fputs\\\\n#endif\\\\n\\\\n#ifndef EOL\\\\n#define EOL ('\\\\\\\\n')\\\\n#endif\\\\n\\\\n#if (__P_UNLOCKED_STDIO_ + 0) > 0 || !defined getchar && !defined getc\\\\n#define __P_getchar_1_(stream) __P_getc_worker_ (stream)\\\\n#define __P_getchar_0_(...) __P_getchar_worker_ ()\\\\n#define __P_getchar_va_(a_1, argc, ...) cat$ (__P_getchar_, argc##_) (a_1)\\\\n#undef getchar\\\\n#define getchar(...) __P_getchar_va_ (__VA_ARGS__ __VA_OPT__ (, ) 1, 0)\\\\n#undef getc\\\\n#define getc(...) getchar (__VA_ARGS__)\\\\n#endif\\\\n\\\\n#if (__P_UNLOCKED_STDIO_ + 0) > 0 || !defined putchar && !defined putc\\\\n#define __P_putchar_2_(c, stream) __P_putc_worker_ (c, stream)\\\\n#define __P_putchar_1_(c, ...) __P_putchar_worker_ (c)\\\\n#define __P_putchar_0_(...) __P_putchar_worker_ (EOL)\\\\n#define __P_putchar_va_(a_1, a_2, argc, ...)                                  \\\\\\\\\\\\n  cat$ (__P_putchar_, argc##_) (a_1, a_2)\\\\n#undef putchar\\\\n#define putchar(...) __P_putchar_va_ (__VA_ARGS__ __VA_OPT__ (, ) 2, 1, 0)\\\\n#undef putc\\\\n#define putc(...) putchar (__VA_ARGS__)\\\\n#endif\\\\n\\\\n#define __P_ungetc_2_(c, stream) ungetc (c, stream)\\\\n#define __P_ungetc_1_(c, ...) ungetc (c, stdin)\\\\n#define __P_ungetc_0_(...) ungetc (EOL, stdin)\\\\n#define __P_ungetc_va_(a_1, a_2, argc, ...)                                   \\\\\\\\\\\\n  cat$ (__P_ungetc_, argc##_) (a_1, a_2)\\\\n#define ungetc(...) __P_ungetc_va_ (__VA_ARGS__ __VA_OPT__ (, ) 2, 1, 0)\\\\n#define ungetchar(...) ungetc (__VA_ARGS__)\\\\n\\\\n#define __P_getc_delimited_helper_(c, r, i, delim, ...)                       \\\\\\\\\\\\n  ({                                                                          \\\\\\\\\\\\n    int c = getc (__VA_ARGS__);                                               \\\\\\\\\\\\n    int r = c;                                                                \\\\\\\\\\\\n    usz i = 0;                                                                \\\\\\\\\\\\n    for (i = 0; (delim)[i]; ++i)                                              \\\\\\\\\\\\n      if (c == (delim)[i])                                                    \\\\\\\\\\\\n        {                                                                     \\\\\\\\\\\\n          r = EOF;                                                            \\\\\\\\\\\\n          break;                                                              \\\\\\\\\\\\n        }                                                                     \\\\\\\\\\\\n    for (i += !!(delim)[i]; (delim)[i]; ++i)                                  \\\\\\\\\\\\n      {                                                                       \\\\\\\\\\\\n        c = getc (__VA_ARGS__);                                               \\\\\\\\\\\\n        if (c != (delim)[i])                                                  \\\\\\\\\\\\n          {                                                                   \\\\\\\\\\\\n            ungetc (c __VA_OPT__ (, ) __VA_ARGS__);                           \\\\\\\\\\\\n            break;                                                            \\\\\\\\\\\\n          }                                                                   \\\\\\\\\\\\n      }                                                                       \\\\\\\\\\\\n    r;                                                                        \\\\\\\\\\\\n  })\\\\n#define __P_getc_delimited_(delim, ...)                                       \\\\\\\\\\\\n  __P_getc_delimited_helper_ (uniq$ (c), uniq$ (r), uniq$ (i),                \\\\\\\\\\\\n                              delim __VA_OPT__ (, ) __VA_ARGS__)\\\\n\\\\n#define __P_gets_3_(str, length, stream)                                      \\\\\\\\\\\\n  __P_fgets_worker_ (str, (iptr)(length), stream)\\\\n#define __P_gets_2_(str, length, ...) __P_gets_3_ (str, length, stdin)\\\\n#define __P_gets_1_(str, ...) __P_gets_2_ (str, lengthof (str))\\\\n#define __P_gets_va_(a_1, a_2, a_3, argc, ...)                                \\\\\\\\\\\\n  cat$ (__P_gets_, argc##_) (a_1, a_2, a_3)\\\\n#define __P_getvs_helper_(ud, ups, sz, cap, str, ch, sp, i, s, delimiter,     \\\\\\\\\\\\n                          psize, stream)                                      \\\\\\\\\\\\n  ({                                                                          \\\\\\\\\\\\n    auto ud = (const char *)(delimiter);                                      \\\\\\\\\\\\n    auto ups = (usz *)((byte *)0 + (uptr)(psize));                            \\\\\\\\\\\\n    usz sz = 0, cap = dynarr$ (0, 2);                                         \\\\\\\\\\\\n    char *str = calloc (1, cap);                                              \\\\\\\\\\\\n    while (str)                                                               \\\\\\\\\\\\n      {                                                                       \\\\\\\\\\\\n        int ch = __P_getc_delimited_ (ud, stream);                            \\\\\\\\\\\\n        if (ch == EOF)                                                        \\\\\\\\\\\\n          break;                                                              \\\\\\\\\\\\n        char *s = realloc (str, cap = dynarr$ (cap, sz + 2));                 \\\\\\\\\\\\n        if (s)                                                                \\\\\\\\\\\\n          {                                                                   \\\\\\\\\\\\n            s[sz++] = ch;                                                     \\\\\\\\\\\\n            s[sz] = 0;                                                        \\\\\\\\\\\\n          }                                                                   \\\\\\\\\\\\n        str = s;                                                              \\\\\\\\\\\\n      }                                                                       \\\\\\\\\\\\n    if (str && ups)                                                           \\\\\\\\\\\\n      *ups = sz;                                                              \\\\\\\\\\\\n    str;                                                                      \\\\\\\\\\\\n  })\\\\n#define __P_getvs_3_(delimiter, psize, stream)                                \\\\\\\\\\\\n  __P_getvs_helper_ (uniq$ (ud), uniq$ (ups), uniq$ (sz), uniq$ (cap),        \\\\\\\\\\\\n                     uniq$ (str), uniq$ (ch), uniq$ (sp), uniq$ (i),          \\\\\\\\\\\\n                     uniq$ (s), delimiter, psize, stream)\\\\n#define __P_getvs_2_(delimiter, psize, ...)                                   \\\\\\\\\\\\n  __P_getvs_3_ (delimiter, psize, stdin)\\\\n#define __P_getvs_1_(delimiter, ...) __P_getvs_2_ (delimiter, null)\\\\n#define __P_getvs_0_(...) __P_getvs_1_ (\\\\\\\"\\\\\\\\r\\\\\\\\n\\\\\\\")\\\\n#define __P_getvs_va_(a_1, a_2, a_3, argc, ...)                               \\\\\\\\\\\\n  cat$ (__P_getvs_, argc##_) (a_1, a_2, a_3)\\\\n#define getvs(...) __P_getvs_va_ (__VA_ARGS__ __VA_OPT__ (, ) 3, 2, 1, 0)\\\\n#define getvstr(...) getvs (__VA_ARGS__)\\\\n#ifdef __GNUC__\\\\n#define __P_gets_g_(str, ...)                                                 \\\\\\\\\\\\n  choose$ (__builtin_constant_p (str),                                        \\\\\\\\\\\\n           getvs (str __VA_OPT__ (, ) __VA_ARGS__),                           \\\\\\\\\\\\n           __P_gets_va_ (str, __VA_ARGS__ __VA_OPT__ (, ) 3, 2, 1))\\\\n#define gets(...)                                                             \\\\\\\\\\\\n  choose$ (0 __VA_OPT__ (|| 1),                                               \\\\\\\\\\\\n           ((void)0 __VA_OPT__ (, __P_gets_g_ (__VA_ARGS__))), getvs ())\\\\n#else\\\\n#define gets(...)                                                             \\\\\\\\\\\\n  choose$ (0 __VA_OPT__ (|| 1),                                               \\\\\\\\\\\\n           ((void)0 __VA_OPT__ (, __P_gets_va_ (__VA_ARGS__, 3, 2, 1))),      \\\\\\\\\\\\n           getvs ())\\\\n#endif\\\\n#define getstr(...) gets (__VA_ARGS__)\\\\n\\\\n#define __P_puts_2_(str, stream) __P_fputs_worker_ (str, stream)\\\\n#define __P_puts_1_(str, ...) __P_fputs_worker_ (str, stdout)\\\\n#define __P_puts_0_(...) puts (\\\\\\\"\\\\\\\")\\\\n#define __P_puts_va_(a_1, a_2, argc, ...) cat$ (__P_puts_, argc##_) (a_1, a_2)\\\\n#define puts(...) __P_puts_va_ (__VA_ARGS__ __VA_OPT__ (, ) 2, 1, 0)\\\\n#define putstr(...) puts (__VA_ARGS__)\\\\n\\\\n#define __P_peekchar_helper_(c, ...)                                          \\\\\\\\\\\\n  ({                                                                          \\\\\\\\\\\\n    int c = getc (__VA_ARGS__);                                               \\\\\\\\\\\\n    ungetc (c __VA_OPT__ (, ) __VA_ARGS__);                                   \\\\\\\\\\\\n    c;                                                                        \\\\\\\\\\\\n  })\\\\n#define peekchar(...)                                                         \\\\\\\\\\\\n  __P_peekchar_helper_ (uniq$ (c) __VA_OPT__ (, ) __VA_ARGS__)\\\\n#define peekc(...) peekchar (__VA_ARGS__)\\\\n\\\\n/* quick decimal integer I/O */\\\\n\\\\n#define __P_getdec_helper_(j, s, ch, type, ...)                               \\\\\\\\\\\\n  ({                                                                          \\\\\\\\\\\\n    auto j = (type){ 0 };                                                     \\\\\\\\\\\\n    bool s = false;                                                           \\\\\\\\\\\\n    int ch = '+';                                                             \\\\\\\\\\\\n    while (ch != EOF && !isdigit (ch))                                        \\\\\\\\\\\\n      {                                                                       \\\\\\\\\\\\n        s = ch == '-';                                                        \\\\\\\\\\\\n        ch = getc (__VA_ARGS__);                                              \\\\\\\\\\\\n      }                                                                       \\\\\\\\\\\\n    while (isdigit (ch))                                                      \\\\\\\\\\\\n      {                                                                       \\\\\\\\\\\\n        j = (j << 3) + (j << 1) + ('0' - ch);                                 \\\\\\\\\\\\n        ch = getc (__VA_ARGS__);                                              \\\\\\\\\\\\n      }                                                                       \\\\\\\\\\\\n    ungetc (ch __VA_OPT__ (, ) __VA_ARGS__);                                  \\\\\\\\\\\\n    !s ? -j : j;                                                              \\\\\\\\\\\\n  })\\\\n#define __P_getdec_2_(type, stream)                                           \\\\\\\\\\\\n  __P_getdec_helper_ (uniq$ (j), uniq$ (s), uniq$ (ch), type, stream)\\\\n#define __P_getdec_1_(type, ...) __P_getdec_2_ (type, )\\\\n#define __P_getdec_0_(...) __P_getdec_1_ (int)\\\\n#define __P_getdec_va_(a_1, a_2, argc, ...)                                   \\\\\\\\\\\\n  cat$ (__P_getdec_, argc##_) (a_1, a_2)\\\\n#define getdec(...) __P_getdec_va_ (__VA_ARGS__ __VA_OPT__ (, ) 2, 1, 0)\\\\n#define getd(...) getdec (__VA_ARGS__)\\\\n\\\\n#define __P_putdec_helper_(j, s, sta, ptr, i, ...)                            \\\\\\\\\\\\n  do                                                                          \\\\\\\\\\\\n    {                                                                         \\\\\\\\\\\\n      auto j = i;                                                             \\\\\\\\\\\\n      bool s = j < 0;                                                         \\\\\\\\\\\\n      char sta[39];                                                           \\\\\\\\\\\\n      char *ptr = sta;                                                        \\\\\\\\\\\\n      do                                                                      \\\\\\\\\\\\n        {                                                                     \\\\\\\\\\\\n          *ptr++ = '0' + (j % 10) * (1 - ((!!s) << 1));                       \\\\\\\\\\\\n          j /= 10;                                                            \\\\\\\\\\\\n        }                                                                     \\\\\\\\\\\\n      while (j);                                                              \\\\\\\\\\\\n      if (s)                                                                  \\\\\\\\\\\\n        putc ('-' __VA_OPT__ (, ) __VA_ARGS__);                               \\\\\\\\\\\\n      while (ptr > sta)                                                       \\\\\\\\\\\\n        putc (*--ptr __VA_OPT__ (, ) __VA_ARGS__);                            \\\\\\\\\\\\n    }                                                                         \\\\\\\\\\\\n  while (0)\\\\n#define putdec(i, ...)                                                        \\\\\\\\\\\\n  __P_putdec_helper_ (uniq$ (j), uniq$ (s), uniq$ (sta), uniq$ (ptr),         \\\\\\\\\\\\n                      i __VA_OPT__ (, ) __VA_ARGS__)\\\\n#define putd(i, ...) putdec (i __VA_OPT__ (, ) __VA_ARGS__)\\\\n\\\\n#define getint(...) getdec (__VA_ARGS__)\\\\n#define geti(...) getd (__VA_ARGS__)\\\\n#define putint(i, ...) putdec (i __VA_OPT__ (, ) __VA_ARGS__)\\\\n#define puti(i, ...) putd (i __VA_OPT__ (, ) __VA_ARGS__)\\\\n\\\\n#define __P_seekchar_helper_(uc, ch, c, stream)                               \\\\\\\\\\\\n  ({                                                                          \\\\\\\\\\\\n    auto uc = c;                                                              \\\\\\\\\\\\n    int ch;                                                                   \\\\\\\\\\\\n    do                                                                        \\\\\\\\\\\\n      ch = getc (stream);                                                     \\\\\\\\\\\\n    while (ch != uc && ch != EOF);                                            \\\\\\\\\\\\n    ch;                                                                       \\\\\\\\\\\\n  })\\\\n#define __P_seekchar_2_(c, stream)                                            \\\\\\\\\\\\n  __P_seekchar_helper_ (uniq$ (uc), uniq$ (ch), c, stream)\\\\n#define __P_seekchar_1_(c, ...) __P_seekchar_2_ (c, )\\\\n#define __P_seekchar_0_(...) __P_seekchar_1_ (EOL)\\\\n#define __P_seekchar_va_(a_1, a_2, argc, ...)                                 \\\\\\\\\\\\n  cat$ (__P_seekchar_, argc##_) (a_1, a_2)\\\\n#define seekchar(...) __P_seekchar_va_ (__VA_ARGS__ __VA_OPT__ (, ) 2, 1, 0)\\\\n#define seekc(...) seekchar (__VA_ARGS__)\\\\n\\\\n#define __P_seekint_helper_(ui, j, i, ...)                                    \\\\\\\\\\\\n  ({                                                                          \\\\\\\\\\\\n    auto ui = i;                                                              \\\\\\\\\\\\n    typeof (ui) j;                                                            \\\\\\\\\\\\n    do                                                                        \\\\\\\\\\\\n      j = geti (typeof (ui) __VA_OPT__ (, ) __VA_ARGS__);                     \\\\\\\\\\\\n    while (j != ui && peekc (__VA_ARGS__) != EOF);                            \\\\\\\\\\\\n    j;                                                                        \\\\\\\\\\\\n  })\\\\n#define seekint(i, ...)                                                       \\\\\\\\\\\\n  __P_seekint_helper_ (uniq$ (ui), uniq$ (j), i __VA_OPT__ (, ) __VA_ARGS__)\\\\n#define seeki(i, ...) seekint (i __VA_OPT__ (, ) __VA_ARGS__)\\\\n\\\\n/************************************ I/O ************************************/\\\\n\\\\n/************************ Miller-Rabin primality test ************************/\\\\n\\\\n#define __P_isprime_helper_(ui, res, u, t, tn, j, stn, v, s, i)               \\\\\\\\\\\\n  ({                                                                          \\\\\\\\\\\\n    auto ui = i;                                                              \\\\\\\\\\\\n    bool res = true;                                                          \\\\\\\\\\\\n    if (ui < 3 || ui % 2 == 0)                                                \\\\\\\\\\\\n      res = ui == 2;                                                          \\\\\\\\\\\\n    else                                                                      \\\\\\\\\\\\n      {                                                                       \\\\\\\\\\\\n        auto u = ui - 1;                                                      \\\\\\\\\\\\n        int t = 0;                                                            \\\\\\\\\\\\n        while ((u & 1) == 0)                                                  \\\\\\\\\\\\n          {                                                                   \\\\\\\\\\\\n            u >>= 1;                                                          \\\\\\\\\\\\n            ++t;                                                              \\\\\\\\\\\\n          }                                                                   \\\\\\\\\\\\n        const u32 tn[]                                                        \\\\\\\\\\\\n            = { 2, 325, 9375, 28178, 450775, 9780504, 1795265022 };           \\\\\\\\\\\\n        for (usz j = 0; j < lengthof (tn) && tn[j] < ui; ++j)                 \\\\\\\\\\\\n          {                                                                   \\\\\\\\\\\\n            auto stn = choose$ (sizeof (ui) < sizeof (u64), (u64)tn[j],       \\\\\\\\\\\\n                                (u128)tn[j]);                                 \\\\\\\\\\\\n            auto v = qpow (stn, u, ui);                                       \\\\\\\\\\\\n            if (v == 1)                                                       \\\\\\\\\\\\n              continue;                                                       \\\\\\\\\\\\n            int s;                                                            \\\\\\\\\\\\n            for (s = 0; s < t; ++s)                                           \\\\\\\\\\\\n              {                                                               \\\\\\\\\\\\n                if (v == ui - 1)                                              \\\\\\\\\\\\n                  break;                                                      \\\\\\\\\\\\n                v = v * v % ui;                                               \\\\\\\\\\\\n              }                                                               \\\\\\\\\\\\n            if (s == t)                                                       \\\\\\\\\\\\n              {                                                               \\\\\\\\\\\\n                res = false;                                                  \\\\\\\\\\\\n                break;                                                        \\\\\\\\\\\\n              }                                                               \\\\\\\\\\\\n          }                                                                   \\\\\\\\\\\\n      }                                                                       \\\\\\\\\\\\n    res;                                                                      \\\\\\\\\\\\n  })\\\\n\\\\n#define isprime(i)                                                            \\\\\\\\\\\\n  __P_isprime_helper_ (uniq$ (ui), uniq$ (res), uniq$ (u), uniq$ (t),         \\\\\\\\\\\\n                       uniq$ (tn), uniq$ (j), uniq$ (stn), uniq$ (v),         \\\\\\\\\\\\n                       uniq$ (s), i)\\\\n\\\\n/************************ Miller-Rabin primality test ************************/\\\\n\\\\n/***************************** Mersenne Twister ******************************/\\\\n\\\\n#define __P_MT_NN_ 312\\\\n#define __P_MT_MM_ 156\\\\n#define __P_MT_MATRIX_A_ UINT64_C (0xb5026f5aa96619e9)\\\\n#define __P_MT_UM_ UINT64_C (0xffffffff80000000)\\\\n#define __P_MT_LM_ UINT64_C (0x7fffffff)\\\\n#define mt$(name) MT_##name##_\\\\n\\\\n#define MT_impl_(...)                                                         \\\\\\\\\\\\n  __VA_ARGS__ u64 $tatic (mt)[__P_MT_NN_];                                    \\\\\\\\\\\\n  __VA_ARGS__ int $tatic (mti) = __P_MT_NN_ + 1;                              \\\\\\\\\\\\n  __VA_ARGS__ void mt$ (seed) (u64 seed)                                      \\\\\\\\\\\\n  {                                                                           \\\\\\\\\\\\n    $tatic (mt)[0] = seed;                                                    \\\\\\\\\\\\n    for ($tatic (mti) = 1; $tatic (mti) < __P_MT_NN_; ++$tatic (mti))         \\\\\\\\\\\\n      $tatic (mt)[$tatic (mti)]                                               \\\\\\\\\\\\n          = (UINT64_C (6364136223846793005)                                   \\\\\\\\\\\\n                 * ($tatic (mt)[$tatic (mti) - 1]                             \\\\\\\\\\\\n                    ^ ($tatic (mt)[$tatic (mti) - 1] >> 62))                  \\\\\\\\\\\\n             + $tatic (mti));                                                 \\\\\\\\\\\\n  }                                                                           \\\\\\\\\\\\n  __VA_ARGS__ u64 $tatic (mt64) (void)                                        \\\\\\\\\\\\n  {                                                                           \\\\\\\\\\\\n    u64 x;                                                                    \\\\\\\\\\\\n    if ($tatic (mti) >= __P_MT_NN_)                                           \\\\\\\\\\\\n      {                                                                       \\\\\\\\\\\\n        if ($tatic (mti) == __P_MT_NN_ + 1)                                   \\\\\\\\\\\\n          {                                                                   \\\\\\\\\\\\n            struct timespec tp;                                               \\\\\\\\\\\\n            if (clock_gettime (CLOCK_MONOTONIC, &tp) == 0)                    \\\\\\\\\\\\n              mt$ (seed) (~(u64)tp.tv_sec ^ ~(u64)tp.tv_nsec                  \\\\\\\\\\\\n                          ^ (u64)tp.tv_nsec << 32);                           \\\\\\\\\\\\n            else                                                              \\\\\\\\\\\\n              mt$ (seed) (UINT64_C (5489));                                   \\\\\\\\\\\\n          }                                                                   \\\\\\\\\\\\n        int i;                                                                \\\\\\\\\\\\n        static u64 mag01[2] = { UINT64_C (0), __P_MT_MATRIX_A_ };             \\\\\\\\\\\\n        for (i = 0; i < __P_MT_NN_ - __P_MT_MM_; ++i)                         \\\\\\\\\\\\n          {                                                                   \\\\\\\\\\\\n            x = ($tatic (mt)[i] & __P_MT_UM_)                                 \\\\\\\\\\\\n                | ($tatic (mt)[i + 1] & __P_MT_LM_);                          \\\\\\\\\\\\n            $tatic (mt)[i] = $tatic (mt)[i + __P_MT_MM_] ^ (x >> 1)           \\\\\\\\\\\\n                             ^ mag01[(int)(x & UINT64_C (1))];                \\\\\\\\\\\\n          }                                                                   \\\\\\\\\\\\n        for (; i < __P_MT_NN_ - 1; ++i)                                       \\\\\\\\\\\\n          {                                                                   \\\\\\\\\\\\n            x = ($tatic (mt)[i] & __P_MT_UM_)                                 \\\\\\\\\\\\n                | ($tatic (mt)[i + 1] & __P_MT_LM_);                          \\\\\\\\\\\\n            $tatic (mt)[i] = $tatic (mt)[i + (__P_MT_MM_ - __P_MT_NN_)]       \\\\\\\\\\\\n                             ^ (x >> 1) ^ mag01[(int)(x & UINT64_C (1))];     \\\\\\\\\\\\n          }                                                                   \\\\\\\\\\\\n        x = ($tatic (mt)[__P_MT_NN_ - 1] & __P_MT_UM_)                        \\\\\\\\\\\\n            | ($tatic (mt)[0] & __P_MT_LM_);                                  \\\\\\\\\\\\n        $tatic (mt)[__P_MT_NN_ - 1] = $tatic (mt)[__P_MT_MM_ - 1] ^ (x >> 1)  \\\\\\\\\\\\n                                      ^ mag01[(int)(x & UINT64_C (1))];       \\\\\\\\\\\\n        $tatic (mti) = 0;                                                     \\\\\\\\\\\\n      }                                                                       \\\\\\\\\\\\n    x = $tatic (mt)[$tatic (mti)++];                                          \\\\\\\\\\\\n    x ^= (x >> 29) & UINT64_C (0x5555555555555555);                           \\\\\\\\\\\\n    x ^= (x << 17) & UINT64_C (0x71d67fffeda60000);                           \\\\\\\\\\\\n    x ^= (x << 37) & UINT64_C (0xfff7eee000000000);                           \\\\\\\\\\\\n    x ^= (x >> 43);                                                           \\\\\\\\\\\\n    return x;                                                                 \\\\\\\\\\\\n  }\\\\n#define mtimpl$(...) mt$ (impl) (__VA_ARGS__)\\\\n/* mt$ (u64) generates a random number on [0, 2 ** 64)-interval */\\\\n#define MT_u64_ ($tatic (mt64) ())\\\\n/* mt$ (i64) generates a random number on [0, 2 ** 63)-interval */\\\\n#define MT_i64_ ((i64)($tatic (mt64) () >> 1))\\\\n/* mt$ (real) generates a random number on [0, 1]-real-interval */\\\\n#define MT_real_ (($tatic (mt64) () >> 11) * (1.0 / 9007199254740991.0))\\\\n/* mt$ (rea) generates a random number on [0, 1)-real-interval */\\\\n#define MT_rea_ (($tatic (mt64) () >> 11) * (1.0 / 9007199254740992.0))\\\\n/* mt$ (eal) generates a random number on (0, 1]-real-interval */\\\\n#define MT_eal_ (1.0 - mt$ (rea) ())\\\\n/* mt$ (ea) generates a random number on (0, 1)-real-interval */\\\\n#define MT_ea_ ((($tatic (mt64) () >> 12) + 0.5) * (1.0 / 4503599627370496.0))\\\\n\\\\n#define __P_mt19937_1_(type)                                                  \\\\\\\\\\\\n  _Generic ((typeof (type)){ 0 },                                             \\\\\\\\\\\\n      u64: mt$ (u64),                                                         \\\\\\\\\\\\n      i64: mt$ (i64),                                                         \\\\\\\\\\\\n      real: mt$ (rea),                                                        \\\\\\\\\\\\n      default: ((void)0))\\\\n#define __P_mt19937_0_(...) __P_mt19937_1_ (u64)\\\\n#define __P_mt19937_va_(a_1, argc, ...) cat$ (__P_mt19937_, argc##_) (a_1)\\\\n/* C++ style of mt19937 */\\\\n#define mt19937(...) __P_mt19937_va_ (__VA_ARGS__ __VA_OPT__ (, ) 1, 0)\\\\n\\\\n/***************************** Mersenne Twister ******************************/\\\\n\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+i c\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"command\\\": \\\"makefile.buildCleanTarget\\\",\\n    \\\"key\\\": \\\"ctrl+f5\\\",\\n    \\\"when\\\": \\\"debugUx == 'simple'\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"Α\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g shift+a l p h a\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"α\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g a l p h a\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"Β\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g shift+b e t a\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"β\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g b e t a\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"Γ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g shift+g a m m a\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"γ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g g a m m a\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"Δ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g shift+d e l t a\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"δ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g d e l t a\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"Ε\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g shift+e p s i l o n\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"ϵ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g e p s i l o n\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"ε\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g v a r e p s i l o n\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"Ζ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g shift+z e t a\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"ζ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g z e t a\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"Η\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g shift+e t a\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"η\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g e t a\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"Θ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g shift+t h e t a\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"θ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g t h e t a\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"ϑ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g v a r t h e t a\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"Ι\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g shift+i o t a\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"ι\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g i o t a\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"Κ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g shift+k a p p a\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"κ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g k a p p a\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"ϰ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g v a r k a p p a\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"Λ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g shift+l a m b d a\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"λ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g l a m b d a\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"Μ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g shift+m u\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"μ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g m u\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"Ν\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g shift+n u\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"ν\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g n u\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"Ξ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g shift+x i\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"ξ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g x i\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"Ο\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g shift+o m i c r o n\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"ο\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g o m i c r o n\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"Π\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g shift+p i\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"π\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g p i\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"ϖ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g v a r p i\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"Ρ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g shift+r h o\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"ρ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g r h o\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"ϱ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g v a r r h o\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"Σ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g shift+s i g m a\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"σ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g s i g m a\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"ς\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g v a r s i g m a\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"Τ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g shift+t a u\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"τ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g t a u\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"Υ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g shift+u p s i l o n\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"υ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g u p s i l o n\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"Φ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g shift+p h i\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"ϕ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g p h i\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"φ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g v a r p h i\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"Χ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g shift+c h i\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"χ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g c h i\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"Ψ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g shift+p s i\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"ψ\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g p s i\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"Ω\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g shift+o m e g a\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"ω\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g o m e g a\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"·\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g t e x t p e r i o d c e n t e r e d\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"·\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g m d o t\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"•\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g t e x t b u l l e t\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"∘\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g c i r c\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"∙\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g b u l l e t\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"⋅\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g c e n t e r d o t\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  },\\n  {\\n    \\\"args\\\": [\\n      \\\"⋅\\\"\\n    ],\\n    \\\"command\\\": \\\"fastsnippet.insertText\\\",\\n    \\\"key\\\": \\\"alt+g c d o t\\\",\\n    \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n  }\\n]\",\"platform\":2}","tasks":"{\"tasks\":\"{\\n  \\\"version\\\": \\\"2.0.0\\\",\\n  \\\"tasks\\\": [{\\n    \\\"type\\\": \\\"cppbuild\\\",\\n    \\\"label\\\": \\\"cc\\\",\\n    \\\"command\\\": \\\"gcc\\\",\\n    \\\"args\\\": [\\\"-fdiagnostics-color\\\", \\\"-Wall\\\", \\\"-Wvla\\\", \\\"-Og\\\", \\\"-ggdb3\\\", \\\"${file}\\\"],\\n    \\\"options\\\": {\\n      \\\"cwd\\\": \\\"${fileDirname}\\\"\\n    },\\n    \\\"problemMatcher\\\": [\\\"$gcc\\\"],\\n    \\\"group\\\": {\\n      \\\"kind\\\": \\\"build\\\",\\n      \\\"isDefault\\\": true\\n    },\\n    \\\"detail\\\": \\\"cc\\\"\\n  }, {\\n    \\\"type\\\": \\\"cppbuild\\\",\\n    \\\"label\\\": \\\"cxx\\\",\\n    \\\"command\\\": \\\"g++\\\",\\n    \\\"args\\\": [\\\"-fdiagnostics-color\\\", \\\"-Wall\\\", \\\"-Wvla\\\", \\\"-Og\\\", \\\"-ggdb3\\\", \\\"${file}\\\"],\\n    \\\"options\\\": {\\n      \\\"cwd\\\": \\\"${fileDirname}\\\"\\n    },\\n    \\\"problemMatcher\\\": [\\\"$gcc\\\"],\\n    \\\"group\\\": {\\n      \\\"kind\\\": \\\"build\\\",\\n      \\\"isDefault\\\": true\\n    },\\n    \\\"detail\\\": \\\"cxx\\\"\\n  }, {\\n    \\\"type\\\": \\\"shell\\\",\\n    \\\"label\\\": \\\"make\\\",\\n    \\\"command\\\": \\\"make\\\",\\n    \\\"args\\\": [],\\n    \\\"options\\\": {\\n      \\\"cwd\\\": \\\"${fileDirname}\\\"\\n    },\\n    \\\"group\\\": {\\n      \\\"kind\\\": \\\"build\\\",\\n      \\\"isDefault\\\": true\\n    },\\n    \\\"detail\\\": \\\"make\\\"\\n  }]\\n}\"}","snippets":"{\"snippets\":{\"makefile.json\":\"{\\n\\t// Place your snippets for makefile here. Each snippet is defined under a snippet name and has a prefix, body and \\n\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\n\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the \\n\\t// same ids are connected.\\n\\t// Example:\\n\\t// \\\"Print to console\\\": {\\n\\t// \\t\\\"prefix\\\": \\\"log\\\",\\n\\t// \\t\\\"body\\\": [\\n\\t// \\t\\t\\\"console.log('$1');\\\",\\n\\t// \\t\\t\\\"$2\\\"\\n\\t// \\t],\\n\\t// \\t\\\"description\\\": \\\"Log output to console\\\"\\n\\t// }\\n}\"}}","extensions":"[{\"identifier\":{\"id\":\"alexclewontin.make-lsp-vscode\",\"uuid\":\"8363f172-600c-4816-9ef0-56a6f3458bdd\"}},{\"identifier\":{\"id\":\"basdp.language-gas-x86\",\"uuid\":\"75dcb385-9b1a-4065-a72b-aab05260382e\"},\"displayName\":\"GNU Assembler Language Support\"},{\"identifier\":{\"id\":\"bbenoist.qml\",\"uuid\":\"1dcbb6ee-7fa8-47d1-8a51-45f2f2adf2a5\"},\"displayName\":\"QML\"},{\"identifier\":{\"id\":\"beaglefoot.awk-ide-vscode\",\"uuid\":\"6bcbbdc8-b23d-4c15-a0dc-cee540d7a243\"},\"displayName\":\"AWK IDE\"},{\"identifier\":{\"id\":\"bierner.github-markdown-preview\",\"uuid\":\"9f5a5fc9-8b23-4484-85c4-1438b82d8634\"},\"displayName\":\"GitHub Markdown Preview\"},{\"identifier\":{\"id\":\"bierner.markdown-checkbox\",\"uuid\":\"b0db4123-c5d9-4f45-bd2e-70738ebbb304\"},\"displayName\":\"Markdown Checkboxes\"},{\"identifier\":{\"id\":\"bierner.markdown-emoji\",\"uuid\":\"f595c9c1-28b5-415e-a55f-2deb4a8c3abd\"},\"displayName\":\"Markdown Emoji\"},{\"identifier\":{\"id\":\"bierner.markdown-footnotes\",\"uuid\":\"8c379296-feca-4544-853d-f085a1fc638f\"},\"displayName\":\"Markdown Footnotes\"},{\"identifier\":{\"id\":\"bierner.markdown-mermaid\",\"uuid\":\"f8d0ffc4-66bb-4a9c-8149-ef8f043691a1\"},\"displayName\":\"Markdown Preview Mermaid Support\"},{\"identifier\":{\"id\":\"bierner.markdown-preview-github-styles\",\"uuid\":\"5cbdf58a-694a-4aba-af08-61d00842eb03\"},\"displayName\":\"Markdown Preview Github Styling\"},{\"identifier\":{\"id\":\"bierner.markdown-yaml-preamble\",\"uuid\":\"b872af63-f9e1-438e-9462-0315abe9d3aa\"},\"displayName\":\"Markdown yaml Preamble\"},{\"identifier\":{\"id\":\"chenperach.c-cpp-cmake-project-creator\",\"uuid\":\"560fd2d3-880a-4e22-98d9-6def0183f341\"},\"displayName\":\"c cpp cmake project creator\"},{\"identifier\":{\"id\":\"chris-noring.node-snippets\",\"uuid\":\"fa17bcf3-8d28-4673-9e23-c448c372e20c\"},\"displayName\":\"node-snippets\"},{\"identifier\":{\"id\":\"christian-kohler.npm-intellisense\",\"uuid\":\"dff6b801-247e-40e9-82e8-8c9b1d19d1b8\"},\"displayName\":\"npm Intellisense\"},{\"identifier\":{\"id\":\"christian-kohler.path-intellisense\",\"uuid\":\"a41c1549-4053-44d4-bf30-60fc809b4a86\"},\"displayName\":\"Path Intellisense\"},{\"identifier\":{\"id\":\"coolbear.systemd-unit-file\",\"uuid\":\"fe20f03a-2abf-470a-ab23-d671ec38ce42\"},\"displayName\":\"systemd-unit-file\"},{\"identifier\":{\"id\":\"cschlosser.doxdocgen\",\"uuid\":\"da7e26d5-d57c-4742-ab47-d77fb189e195\"},\"displayName\":\"Doxygen Documentation Generator\"},{\"identifier\":{\"id\":\"ctf0.symbol-masks-new\",\"uuid\":\"fa087017-b518-491a-8c12-3d81bfa82b90\"},\"displayName\":\"Symbol Masks (New)\"},{\"identifier\":{\"id\":\"daohong-emilio.yash\",\"uuid\":\"3ac9d8a3-4e1f-4953-82e8-3a1c979cbe08\"},\"displayName\":\"Yash\"},{\"identifier\":{\"id\":\"darxeal.tampermonkey-snippets\",\"uuid\":\"262e2043-67b3-4f86-9cde-83f71fa7d9be\"},\"displayName\":\"Tampermonkey Snippets\"},{\"identifier\":{\"id\":\"davidanson.vscode-markdownlint\",\"uuid\":\"daf8b44d-8aae-4da2-80c5-1f770219f643\"},\"displayName\":\"markdownlint\"},{\"identifier\":{\"id\":\"davidbwaters.macos-modern-theme\",\"uuid\":\"ad4ee4d7-9d78-49e4-801e-b2fef4eaff6e\"},\"displayName\":\"MacOS Modern Theme\"},{\"identifier\":{\"id\":\"dbaeumer.vscode-eslint\",\"uuid\":\"583b2b34-2c1e-4634-8c0b-0b82e283ea3a\"},\"displayName\":\"ESLint\"},{\"identifier\":{\"id\":\"digitalbrainstem.javascript-ejs-support\",\"uuid\":\"9cd87837-c82a-4817-9b79-1c84775aa158\"},\"displayName\":\"EJS language support\"},{\"identifier\":{\"id\":\"discretegames.f5anything\",\"uuid\":\"370d707b-acca-4ddc-9e39-cfa9705953f0\"},\"displayName\":\"F5 Anything\"},{\"identifier\":{\"id\":\"donjayamanne.githistory\",\"uuid\":\"5960f38e-0bbe-4644-8f9c-9c8824e82511\"},\"displayName\":\"Git History\"},{\"identifier\":{\"id\":\"dotjoshjohnson.xml\",\"uuid\":\"0cb81da2-1880-4755-9995-0ae9cc728e20\"},\"displayName\":\"XML Tools\"},{\"identifier\":{\"id\":\"dustypomerleau.rust-syntax\",\"uuid\":\"235e8b64-5222-49db-978c-cb45e727cd14\"},\"displayName\":\"Rust Syntax\"},{\"identifier\":{\"id\":\"ecmel.vscode-html-css\",\"uuid\":\"aaee577c-f062-495a-9816-0cbd442f1d25\"},\"displayName\":\"HTML CSS Support\"},{\"identifier\":{\"id\":\"felipecaputo.git-project-manager\",\"uuid\":\"2bba45f2-4a48-41a6-bb86-d6ba5ab29a9f\"},\"displayName\":\"Git Project Manager\"},{\"identifier\":{\"id\":\"foxundermoon.shell-format\",\"uuid\":\"5fb19573-2183-4cf2-b53d-0fb869dae7ae\"},\"displayName\":\"shell-format\"},{\"identifier\":{\"id\":\"fwcd.kotlin\",\"uuid\":\"c86bc8a9-fd3b-44db-b28a-2d146cb78d3c\"},\"displayName\":\"Kotlin\"},{\"identifier\":{\"id\":\"github.codespaces\",\"uuid\":\"4023d3e5-c840-4cdd-8b54-51c77548aa3f\"},\"displayName\":\"GitHub Codespaces\"},{\"identifier\":{\"id\":\"github.github-vscode-theme\",\"uuid\":\"7328a705-91fc-49e6-8293-da6f112e482d\"},\"displayName\":\"GitHub Theme\"},{\"identifier\":{\"id\":\"github.remotehub\",\"uuid\":\"fc7d7e85-2e58-4c1c-97a3-2172ed9a77cd\"},\"displayName\":\"GitHub Repositories\"},{\"identifier\":{\"id\":\"giyyapan.fast-snippet\",\"uuid\":\"da026bbd-c7df-433a-90d6-2f853e92a737\"},\"displayName\":\"Fast Snippet\"},{\"identifier\":{\"id\":\"hangxingliu.vscode-nginx-conf-hint\",\"uuid\":\"c3d3e8fb-c61d-4edf-8fb8-32298bc763f9\"},\"displayName\":\"nginx.conf hint\"},{\"identifier\":{\"id\":\"hbenl.vscode-test-explorer\",\"uuid\":\"ff96f1b4-a4b8-45ef-8ecf-c232c0cb75c8\"},\"displayName\":\"Test Explorer UI\"},{\"identifier\":{\"id\":\"hogashi.crontab-syntax-highlight\",\"uuid\":\"608f80f3-12af-4601-a960-2e3334c95c3f\"},\"displayName\":\"Crontab Syntax Highlight\"},{\"identifier\":{\"id\":\"hollowtree.vue-snippets\",\"uuid\":\"3620b114-6fe8-459b-8c68-99943147069b\"},\"displayName\":\"Vue 3 Snippets\"},{\"identifier\":{\"id\":\"james-yu.latex-workshop\",\"uuid\":\"61d03280-3919-4dd1-bce1-178ca21fdeaf\"},\"displayName\":\"LaTeX Workshop\"},{\"identifier\":{\"id\":\"jasonnutter.search-node-modules\",\"uuid\":\"ee108066-df8b-43ae-9a83-e6c11400a759\"},\"displayName\":\"Search node_modules\"},{\"identifier\":{\"id\":\"jbockle.jbockle-format-files\",\"uuid\":\"3fe6f5f6-ba66-4d7e-87da-ae72742dfc17\"},\"displayName\":\"Format Files\"},{\"identifier\":{\"id\":\"jeff-hykin.better-cpp-syntax\",\"uuid\":\"73767f91-7dcb-43cb-90b3-596d073eea1f\"},\"displayName\":\"Better C++ Syntax\"},{\"identifier\":{\"id\":\"juanblanco.solidity\",\"uuid\":\"25baab03-fe9a-40c7-b683-55c9a0a92480\"}},{\"identifier\":{\"id\":\"kevinrose.vsc-python-indent\",\"uuid\":\"f3cbfb84-b1e1-40ff-b70f-877253461260\"},\"displayName\":\"Python Indent\"},{\"identifier\":{\"id\":\"llvm-vs-code-extensions.vscode-clangd\",\"uuid\":\"103154cb-b81d-4e1b-8281-c5f4fa563d37\"},\"displayName\":\"clangd\"},{\"identifier\":{\"id\":\"llvm-vs-code-extensions.vscode-mlir\",\"uuid\":\"223e0adc-e5c8-4025-bfb8-b7a1ff223705\"},\"displayName\":\"MLIR\"},{\"identifier\":{\"id\":\"mathiasfrohlich.kotlin\",\"uuid\":\"d36bad53-910d-481a-a7ee-8992450665f6\"},\"displayName\":\"Kotlin Language\"},{\"identifier\":{\"id\":\"mattn.lisp\",\"uuid\":\"a386158e-90f6-4fd7-bd5e-ef6c122b503f\"}},{\"identifier\":{\"id\":\"moshfeu.compare-folders\",\"uuid\":\"03241f90-1c77-402a-b17f-1d3cee943969\"},\"displayName\":\"Compare Folders\"},{\"identifier\":{\"id\":\"ms-azuretools.vscode-docker\",\"uuid\":\"0479fc1c-3d67-49f9-b087-fb9069afe48f\"},\"displayName\":\"Docker\"},{\"identifier\":{\"id\":\"ms-dotnettools.csharp\",\"uuid\":\"d0bfc4ab-1d3a-4487-8782-7cf6027b4fff\"},\"displayName\":\"C#\"},{\"identifier\":{\"id\":\"ms-dotnettools.vscode-dotnet-runtime\",\"uuid\":\"1aab81a1-b3d9-4aef-976b-577d5d90fe3f\"},\"displayName\":\".NET Install Tool\"},{\"identifier\":{\"id\":\"ms-python.autopep8\",\"uuid\":\"5a21b0c3-89ca-46dd-8ada-658518fb94a5\"},\"displayName\":\"autopep8\"},{\"identifier\":{\"id\":\"ms-python.debugpy\",\"uuid\":\"4bd5d2c9-9d65-401a-b0b2-7498d9f17615\"},\"displayName\":\"Python Debugger\"},{\"identifier\":{\"id\":\"ms-python.isort\",\"uuid\":\"4ad0ce32-ff3f-49f0-83b5-93e5dc00cfff\"},\"displayName\":\"isort\"},{\"identifier\":{\"id\":\"ms-python.python\",\"uuid\":\"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5\"},\"displayName\":\"Python\"},{\"identifier\":{\"id\":\"ms-python.vscode-pylance\",\"uuid\":\"364d2426-116a-433a-a5d8-a5098dc3afbd\"},\"displayName\":\"Pylance\"},{\"identifier\":{\"id\":\"ms-toolsai.jupyter\",\"uuid\":\"6c2f1801-1e7f-45b2-9b5c-7782f1e076e8\"},\"displayName\":\"Jupyter\"},{\"identifier\":{\"id\":\"ms-toolsai.jupyter-keymap\",\"uuid\":\"9f6dc8db-620c-4844-b8c5-e74914f1be27\"},\"displayName\":\"Jupyter Keymap\"},{\"identifier\":{\"id\":\"ms-toolsai.jupyter-renderers\",\"uuid\":\"b15c72f8-d5fe-421a-a4f7-27ed9f6addbf\"},\"displayName\":\"Jupyter Notebook Renderers\"},{\"identifier\":{\"id\":\"ms-toolsai.vscode-jupyter-cell-tags\",\"uuid\":\"ab4fb32a-befb-4102-adf9-1652d0cd6a5e\"},\"displayName\":\"Jupyter Cell Tags\"},{\"identifier\":{\"id\":\"ms-toolsai.vscode-jupyter-slideshow\",\"uuid\":\"e153ca70-b543-4865-b4c5-b31d34185948\"},\"displayName\":\"Jupyter Slide Show\"},{\"identifier\":{\"id\":\"ms-vscode-remote.remote-containers\",\"uuid\":\"93ce222b-5f6f-49b7-9ab1-a0463c6238df\"},\"displayName\":\"Dev Containers\"},{\"identifier\":{\"id\":\"ms-vscode-remote.remote-ssh\",\"uuid\":\"607fd052-be03-4363-b657-2bd62b83d28a\"},\"displayName\":\"Remote - SSH\"},{\"identifier\":{\"id\":\"ms-vscode-remote.remote-ssh-edit\",\"uuid\":\"bfeaf631-bcff-4908-93ed-fda4ef9a0c5c\"},\"displayName\":\"Remote - SSH: Editing Configuration Files\"},{\"identifier\":{\"id\":\"ms-vscode-remote.remote-wsl\",\"uuid\":\"f0c5397b-d357-4197-99f0-cb4202f22818\"},\"displayName\":\"WSL\"},{\"identifier\":{\"id\":\"ms-vscode-remote.vscode-remote-extensionpack\",\"uuid\":\"23d72dfc-8dd1-4e30-926e-8783b4378f13\"},\"displayName\":\"Remote Development\"},{\"identifier\":{\"id\":\"ms-vscode.azure-repos\",\"uuid\":\"25cfa506-1433-4595-a73f-61666807126d\"},\"displayName\":\"Azure Repos\"},{\"identifier\":{\"id\":\"ms-vscode.cmake-tools\",\"uuid\":\"7c889349-8749-43d4-8b5e-08939936d7f4\"},\"displayName\":\"CMake Tools\"},{\"identifier\":{\"id\":\"ms-vscode.cpptools\",\"uuid\":\"690b692e-e8a9-493f-b802-8089d50ac1b2\"},\"displayName\":\"C/C++\"},{\"identifier\":{\"id\":\"ms-vscode.hexeditor\",\"uuid\":\"cc7d2112-5178-4472-8e0e-25dced95e7f0\"},\"displayName\":\"Hex Editor\"},{\"identifier\":{\"id\":\"ms-vscode.js-debug-nightly\",\"uuid\":\"7acbb4ce-c85a-49d4-8d95-a8054406ae97\"},\"displayName\":\"JavaScript Debugger (Nightly)\"},{\"identifier\":{\"id\":\"ms-vscode.makefile-tools\",\"uuid\":\"e09cf600-90a1-414e-92a0-031f1a5391c6\"},\"displayName\":\"Makefile Tools\"},{\"identifier\":{\"id\":\"ms-vscode.remote-explorer\",\"uuid\":\"11858313-52cc-4e57-b3e4-d7b65281e34b\"},\"displayName\":\"Remote Explorer\"},{\"identifier\":{\"id\":\"ms-vscode.remote-repositories\",\"uuid\":\"cf5142f0-3701-4992-980c-9895a750addf\"},\"displayName\":\"Remote Repositories\"},{\"identifier\":{\"id\":\"ms-vscode.remote-server\",\"uuid\":\"105c0b3c-07a9-4156-a4fc-4141040eb07e\"},\"displayName\":\"Remote - Tunnels\"},{\"identifier\":{\"id\":\"ms-vscode.test-adapter-converter\",\"uuid\":\"47210ec2-0324-4cbb-9523-9dff02a5f9ec\"},\"displayName\":\"Test Adapter Converter\"},{\"identifier\":{\"id\":\"ms-vscode.vscode-typescript-next\",\"uuid\":\"15305aca-2588-4ca0-8147-ab2c64730b82\"},\"displayName\":\"JavaScript and TypeScript Nightly\",\"version\":\"5.7.20240920\"},{\"identifier\":{\"id\":\"ms-vsliveshare.vsliveshare\",\"uuid\":\"5a6dc0d5-dc02-4121-8e24-cad33a2ff0af\"},\"displayName\":\"Live Share\"},{\"identifier\":{\"id\":\"mshr-h.veriloghdl\",\"uuid\":\"feb7e3b5-7d35-4f95-a3d2-61eeaa12efa5\"},\"displayName\":\"Verilog-HDL/SystemVerilog/Bluespec SystemVerilog\"},{\"identifier\":{\"id\":\"naco-siren.gradle-language\",\"uuid\":\"1dd7f786-f59f-4199-a147-fc98a56a11f2\"},\"displayName\":\"Gradle Language Support\"},{\"identifier\":{\"id\":\"natqe.reload\",\"uuid\":\"b9484b93-0531-4fd3-b3dd-9ff58dcfe678\"},\"displayName\":\"Reload\"},{\"identifier\":{\"id\":\"nvidia.nsight-vscode-edition\",\"uuid\":\"33721321-341f-476d-b775-b91a14ddd403\"},\"displayName\":\"Nsight Visual Studio Code Edition\"},{\"identifier\":{\"id\":\"octref.vetur\",\"uuid\":\"2f5dd8cb-d251-4d70-abfe-ddebcb077483\"},\"displayName\":\"Vetur\"},{\"identifier\":{\"id\":\"rangav.vscode-thunder-client\",\"uuid\":\"2fd56207-78ef-49d4-95d2-9b801eee4dbf\"},\"displayName\":\"Thunder Client\",\"version\":\"2.25.6\"},{\"identifier\":{\"id\":\"redhat.fabric8-analytics\",\"uuid\":\"efcb43ca-77e6-43e4-8ddc-ada617cb34bd\"},\"displayName\":\"Red Hat Dependency Analytics\"},{\"identifier\":{\"id\":\"redhat.java\",\"uuid\":\"198a707e-28af-4e84-8610-6e2f628dd12d\"},\"displayName\":\"Language Support for Java(TM) by Red Hat\"},{\"identifier\":{\"id\":\"redhat.vscode-xml\",\"uuid\":\"6703768d-d42f-474e-9f6e-5f288d53f6e8\"},\"displayName\":\"XML\"},{\"identifier\":{\"id\":\"redhat.vscode-yaml\",\"uuid\":\"2061917f-f76a-458a-8da9-f162de22b97e\"},\"displayName\":\"YAML\"},{\"identifier\":{\"id\":\"richie5um2.vscode-sort-json\",\"uuid\":\"3fb77af3-b8b3-4cb9-9137-f555bd80e2b1\"},\"displayName\":\"Sort JSON objects\"},{\"identifier\":{\"id\":\"rifi2k.format-html-in-php\",\"uuid\":\"6b8be8ff-4ed6-4534-99e6-c37b7a82aea6\"},\"displayName\":\"Format HTML in PHP\"},{\"identifier\":{\"id\":\"rogalmic.bash-debug\",\"uuid\":\"f4f0748b-9f86-461e-84f9-73bf2e1f91c2\"},\"displayName\":\"Bash Debug\"},{\"identifier\":{\"id\":\"rust-lang.rust-analyzer\",\"uuid\":\"06574cb4-e5dc-4631-8174-a543a4533621\"},\"displayName\":\"rust-analyzer\",\"version\":\"0.3.2112\"},{\"identifier\":{\"id\":\"ryanolsonx.solarized\",\"uuid\":\"7228c862-21fb-4a4c-a50a-8dfb4ca8c691\"},\"displayName\":\"Solarized\"},{\"identifier\":{\"id\":\"scala-lang.scala\",\"uuid\":\"c6f87c08-f5ca-4f59-8cee-bc29464dcbfb\"},\"displayName\":\"Scala Syntax (official)\"},{\"identifier\":{\"id\":\"scalameta.metals\",\"uuid\":\"d56562ae-394d-46cd-a26d-2eafab4ce5a2\"},\"displayName\":\"Scala (Metals)\"},{\"identifier\":{\"id\":\"serayuzgur.crates\",\"uuid\":\"6a95a3fd-3a5d-4326-b8ab-1b1653b1f183\"},\"displayName\":\"crates\"},{\"identifier\":{\"id\":\"sonarsource.sonarlint-vscode\",\"uuid\":\"a7fa941e-bcda-486f-8141-8483a6286177\"},\"displayName\":\"SonarLint\"},{\"identifier\":{\"id\":\"tamasfe.even-better-toml\",\"uuid\":\"b2215d5f-675e-4a2b-b6ac-1ca737518b78\"},\"displayName\":\"Even Better TOML\"},{\"identifier\":{\"id\":\"tintinweb.graphviz-interactive-preview\",\"uuid\":\"946ca9d7-b1d0-405d-b076-107880317deb\"},\"displayName\":\"Graphviz Interactive Preview\",\"version\":\"0.3.5\"},{\"identifier\":{\"id\":\"tonka3000.qtvsctools\",\"uuid\":\"c8429c67-e37a-4685-8e77-099b2c44324e\"},\"displayName\":\"Qt tools\"},{\"identifier\":{\"id\":\"trond-snekvik.gnu-mapfiles\",\"uuid\":\"56864045-58b1-47f7-88cb-877d5f1f532f\"},\"displayName\":\"GNU Linker Map files\"},{\"identifier\":{\"id\":\"twxs.cmake\",\"uuid\":\"2be7cf14-2603-402e-9771-fd79df83cdf8\"},\"displayName\":\"CMake\"},{\"identifier\":{\"id\":\"usernamehw.errorlens\",\"uuid\":\"9d8c32ab-354c-4daf-a9bf-20b633734435\"},\"displayName\":\"Error Lens\"},{\"identifier\":{\"id\":\"visualstudioexptteam.intellicode-api-usage-examples\",\"uuid\":\"9fa2a00e-3bfa-4c2a-abc4-a865bb2b5cf3\"},\"displayName\":\"IntelliCode API Usage Examples\"},{\"identifier\":{\"id\":\"visualstudioexptteam.vscodeintellicode\",\"uuid\":\"876e8f93-74d0-4f4f-91b7-34a09f19f444\"},\"displayName\":\"IntelliCode\"},{\"identifier\":{\"id\":\"vscjava.vscode-gradle\",\"uuid\":\"a226f06e-9b5e-493b-b92a-553d3572f969\"},\"displayName\":\"Gradle for Java\"},{\"identifier\":{\"id\":\"vscjava.vscode-java-debug\",\"uuid\":\"61fcd0cf-64d7-4836-8d6b-d55f4fb83281\"},\"displayName\":\"Debugger for Java\"},{\"identifier\":{\"id\":\"vscjava.vscode-java-dependency\",\"uuid\":\"7865e561-1c83-410e-9b99-aabada597a7e\"},\"displayName\":\"Project Manager for Java\"},{\"identifier\":{\"id\":\"vscjava.vscode-java-pack\",\"uuid\":\"96f11e1f-1a46-4592-b084-f025b2c2a81f\"},\"displayName\":\"Extension Pack for Java\"},{\"identifier\":{\"id\":\"vscjava.vscode-java-test\",\"uuid\":\"67c06b0d-1891-42ca-b2a8-113e79bff069\"},\"displayName\":\"Test Runner for Java\"},{\"identifier\":{\"id\":\"vscjava.vscode-maven\",\"uuid\":\"b0f06c6b-24fb-4d7b-bd79-bc5e2fa17312\"},\"displayName\":\"Maven for Java\"},{\"identifier\":{\"id\":\"vscjava.vscode-spring-initializr\",\"uuid\":\"a205ad34-542b-4c67-a9ed-f645103ad9c0\"},\"displayName\":\"Spring Initializr Java Support\"},{\"identifier\":{\"id\":\"vue.volar\",\"uuid\":\"a95ee795-1576-4ffa-acda-8d6e6a95c584\"},\"displayName\":\"Vue - Official\"},{\"identifier\":{\"id\":\"wayou.vscode-icons-mac\",\"uuid\":\"53c3207b-73df-433b-90ad-785b5023f403\"},\"displayName\":\"vscode-icons-mac\"},{\"identifier\":{\"id\":\"while.scorpiotools\",\"uuid\":\"fbb211a4-0a30-4d49-b0a4-7c771c99643e\"},\"displayName\":\"Scorpio Tools\"},{\"identifier\":{\"id\":\"xabikos.javascriptsnippets\",\"uuid\":\"a2cec723-5349-460d-9de9-0fd1f8d3456f\"},\"displayName\":\"JavaScript (ES6) code snippets\"},{\"identifier\":{\"id\":\"xdebug.php-debug\",\"uuid\":\"044b4b31-2969-4af3-895d-855433b8b46d\"},\"displayName\":\"PHP Debug\"},{\"identifier\":{\"id\":\"xdebug.php-pack\",\"uuid\":\"1a9300c9-36a6-44d1-9d09-ada3641b8727\"},\"displayName\":\"PHP Extension Pack\"},{\"identifier\":{\"id\":\"zh9528.file-size\",\"uuid\":\"9734a8c6-1c74-4259-92ba-e4c3edf4a483\"},\"displayName\":\"file-size\"},{\"identifier\":{\"id\":\"zixuanwang.linkerscript\",\"uuid\":\"63c2dc61-783f-4cbc-9fb8-0c75aeb0527c\"},\"displayName\":\"LinkerScript\"},{\"identifier\":{\"id\":\"zobo.php-intellisense\",\"uuid\":\"3eddb68d-a5dd-43fb-be03-6f508d98fe97\"},\"displayName\":\"PHP IntelliSense\"}]","globalState":"{\"storage\":{\"workbench.panel.alignment\":\"center\",\"colorThemeData\":\"{\\\"id\\\":\\\"vs-dark ryanolsonx-solarized-themes-dark-color-theme-json\\\",\\\"label\\\":\\\"Solarized Dark+\\\",\\\"settingsId\\\":\\\"Solarized Dark+\\\",\\\"themeTokenColors\\\":[{\\\"settings\\\":{\\\"foreground\\\":\\\"#bbbbbbff\\\",\\\"background\\\":\\\"#002b36ff\\\"}},{\\\"settings\\\":{\\\"background\\\":\\\"#002B36\\\",\\\"foreground\\\":\\\"#93A1A1\\\"},\\\"scope\\\":[\\\"meta.embedded\\\",\\\"source.groovy.embedded\\\"]},{\\\"settings\\\":{\\\"fontStyle\\\":\\\"italic\\\",\\\"foreground\\\":\\\"#657B83\\\"},\\\"scope\\\":\\\"comment\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#2AA198\\\"},\\\"scope\\\":\\\"string\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#D30102\\\"},\\\"scope\\\":\\\"string.regexp\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#D33682\\\"},\\\"scope\\\":\\\"constant.numeric\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#268BD2\\\"},\\\"scope\\\":[\\\"variable.language\\\",\\\"variable.other\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#859900\\\"},\\\"scope\\\":\\\"keyword\\\"},{\\\"settings\\\":{\\\"fontStyle\\\":\\\"bold\\\",\\\"foreground\\\":\\\"#93A1A1\\\"},\\\"scope\\\":\\\"storage\\\"},{\\\"settings\\\":{\\\"fontStyle\\\":\\\"\\\",\\\"foreground\\\":\\\"#CB4B16\\\"},\\\"scope\\\":[\\\"entity.name.class\\\",\\\"entity.name.type\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#268BD2\\\"},\\\"scope\\\":\\\"entity.name.function\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#859900\\\"},\\\"scope\\\":\\\"punctuation.definition.variable\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#D30102\\\"},\\\"scope\\\":[\\\"punctuation.section.embedded.begin\\\",\\\"punctuation.section.embedded.end\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#B58900\\\"},\\\"scope\\\":[\\\"constant.language\\\",\\\"meta.preprocessor\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#CB4B16\\\"},\\\"scope\\\":[\\\"support.function.construct\\\",\\\"keyword.other.new\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#CB4B16\\\"},\\\"scope\\\":[\\\"constant.character\\\",\\\"constant.other\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#6C71C4\\\"},\\\"scope\\\":\\\"entity.other.inherited-class\\\"},{\\\"settings\\\":{},\\\"scope\\\":\\\"variable.parameter\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#268BD2\\\"},\\\"scope\\\":\\\"entity.name.tag\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#657B83\\\"},\\\"scope\\\":\\\"punctuation.definition.tag\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#93A1A1\\\"},\\\"scope\\\":\\\"entity.other.attribute-name\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#268BD2\\\"},\\\"scope\\\":\\\"support.function\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#D30102\\\"},\\\"scope\\\":\\\"punctuation.separator.continuation\\\"},{\\\"settings\\\":{},\\\"scope\\\":\\\"support.constant\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#859900\\\"},\\\"scope\\\":[\\\"support.type\\\",\\\"support.class\\\"]},{\\\"settings\\\":{\\\"foreground\\\":\\\"#CB4B16\\\"},\\\"scope\\\":\\\"support.type.exception\\\"},{\\\"settings\\\":{},\\\"scope\\\":\\\"support.other.variable\\\"},{\\\"settings\\\":{},\\\"scope\\\":\\\"invalid\\\"},{\\\"settings\\\":{\\\"background\\\":\\\"#b58900\\\",\\\"fontStyle\\\":\\\"italic\\\",\\\"foreground\\\":\\\"#E0EDDD\\\"},\\\"scope\\\":[\\\"meta.diff\\\",\\\"meta.diff.header\\\"]},{\\\"settings\\\":{\\\"background\\\":\\\"#eee8d5\\\",\\\"fontStyle\\\":\\\"\\\",\\\"foreground\\\":\\\"#dc322f\\\"},\\\"scope\\\":\\\"markup.deleted\\\"},{\\\"settings\\\":{\\\"background\\\":\\\"#eee8d5\\\",\\\"fontStyle\\\":\\\"\\\",\\\"foreground\\\":\\\"#cb4b16\\\"},\\\"scope\\\":\\\"markup.changed\\\"},{\\\"settings\\\":{\\\"background\\\":\\\"#eee8d5\\\",\\\"foreground\\\":\\\"#219186\\\"},\\\"scope\\\":\\\"markup.inserted\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#859900\\\"},\\\"scope\\\":\\\"markup.quote\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#B58900\\\"},\\\"scope\\\":\\\"markup.list\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#D33682\\\"},\\\"scope\\\":[\\\"markup.bold\\\",\\\"markup.italic\\\"]},{\\\"settings\\\":{\\\"fontStyle\\\":\\\"\\\",\\\"foreground\\\":\\\"#2AA198\\\"},\\\"scope\\\":\\\"markup.inline.raw\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#268BD2\\\"},\\\"scope\\\":\\\"markup.heading\\\"},{\\\"settings\\\":{\\\"fontStyle\\\":\\\"\\\",\\\"foreground\\\":\\\"#268BD2\\\"},\\\"scope\\\":\\\"markup.heading.setext\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#6796e6\\\"},\\\"scope\\\":\\\"token.info-token\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#cd9731\\\"},\\\"scope\\\":\\\"token.warn-token\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#f44747\\\"},\\\"scope\\\":\\\"token.error-token\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#b267e6\\\"},\\\"scope\\\":\\\"token.debug-token\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#839496\\\"},\\\"scope\\\":\\\"variable.object.property\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#839496\\\"},\\\"scope\\\":\\\"variable.parameter\\\"},{\\\"settings\\\":{\\\"fontStyle\\\":\\\"\\\"},\\\"scope\\\":\\\"support.type\\\"},{\\\"settings\\\":{\\\"fontStyle\\\":\\\"\\\"},\\\"scope\\\":\\\"storage.type.function\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#b58900\\\"},\\\"scope\\\":\\\"entity.other.inherited-class\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#859900ff\\\",\\\"fontStyle\\\":\\\"\\\"},\\\"scope\\\":\\\"storage.modifier\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#859900ff\\\",\\\"fontStyle\\\":\\\"\\\"},\\\"scope\\\":\\\"storage.type\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#D33682\\\"},\\\"scope\\\":\\\"keyword.control.import\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#859900ff\\\",\\\"fontStyle\\\":\\\"\\\"},\\\"scope\\\":\\\"storage.modifier.async\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#839496\\\"},\\\"scope\\\":\\\"meta.import\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#839496\\\"},\\\"scope\\\":\\\"source.ts\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#839496\\\"},\\\"scope\\\":\\\"meta.function-call\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#b58900\\\"},\\\"scope\\\":\\\"entity.name.type\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#839496\\\"},\\\"scope\\\":\\\"entity.name.function\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#839496\\\"},\\\"scope\\\":\\\"variable.other\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#859900\\\"},\\\"scope\\\":\\\"storage.modifier.tsx\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#268BD2\\\"},\\\"scope\\\":\\\"entity.name.type.class.python\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#268BD2\\\"},\\\"scope\\\":\\\"support.type.python\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#839496\\\"},\\\"scope\\\":\\\"source.python\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#cb4b16\\\"},\\\"scope\\\":\\\"keyword.control.import\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#cb4b16\\\"},\\\"scope\\\":\\\"keyword.control.from\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#268BD2\\\"},\\\"scope\\\":\\\"constant.language.python\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#268BD2\\\"},\\\"scope\\\":\\\"entity.name.function.python\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#657B83\\\"},\\\"scope\\\":\\\"punctuation.separator.dictionary.key-value.json, punctuation.separator.array.json, punctuation.separator.dictionary.pair.json\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#268BD2\\\"},\\\"scope\\\":\\\"storage.type.ts\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#b58900\\\"},\\\"scope\\\":\\\"support.type.primitive\\\"},{\\\"settings\\\":{\\\"foreground\\\":\\\"#DC3272\\\"},\\\"scope\\\":\\\"punctuation.definition.dictionary.begin.json, punctuation.definition.dictionary.end.json, punctuation.definition.array.begin.json, punctuation.definition.array.end.json\\\"}],\\\"semanticTokenRules\\\":[],\\\"extensionData\\\":{\\\"_extensionId\\\":\\\"ryanolsonx.solarized\\\",\\\"_extensionIsBuiltin\\\":false,\\\"_extensionName\\\":\\\"solarized\\\",\\\"_extensionPublisher\\\":\\\"ryanolsonx\\\"},\\\"colorMap\\\":{\\\"errorForeground\\\":\\\"#ffeaea\\\",\\\"focusBorder\\\":\\\"#2aa19899\\\",\\\"selection.background\\\":\\\"#2aa19899\\\",\\\"input.background\\\":\\\"#003847\\\",\\\"input.foreground\\\":\\\"#93a1a1\\\",\\\"inputOption.activeBorder\\\":\\\"#2aa19899\\\",\\\"input.placeholderForeground\\\":\\\"#93a1a1aa\\\",\\\"inputValidation.infoBackground\\\":\\\"#052730\\\",\\\"inputValidation.infoBorder\\\":\\\"#363b5f\\\",\\\"inputValidation.warningBackground\\\":\\\"#5d5938\\\",\\\"inputValidation.warningBorder\\\":\\\"#9d8a5e\\\",\\\"inputValidation.errorBackground\\\":\\\"#571b26\\\",\\\"inputValidation.errorBorder\\\":\\\"#a92049\\\",\\\"dropdown.background\\\":\\\"#00212b\\\",\\\"dropdown.border\\\":\\\"#2aa19899\\\",\\\"list.focusBackground\\\":\\\"#005a6f\\\",\\\"list.activeSelectionBackground\\\":\\\"#005a6f\\\",\\\"list.inactiveSelectionBackground\\\":\\\"#00445488\\\",\\\"list.hoverBackground\\\":\\\"#004454aa\\\",\\\"list.dropBackground\\\":\\\"#00445488\\\",\\\"list.highlightForeground\\\":\\\"#1ebcc5\\\",\\\"pickerGroup.foreground\\\":\\\"#2aa19899\\\",\\\"pickerGroup.border\\\":\\\"#2aa19899\\\",\\\"button.background\\\":\\\"#2aa19899\\\",\\\"badge.background\\\":\\\"#047aa6\\\",\\\"progressBar.background\\\":\\\"#047aa6\\\",\\\"editor.background\\\":\\\"#002b36\\\",\\\"editorWidget.background\\\":\\\"#00212b\\\",\\\"editor.selectionBackground\\\":\\\"#073642\\\",\\\"editor.selectionHighlightBackground\\\":\\\"#005a6faa\\\",\\\"editorHoverWidget.background\\\":\\\"#004052\\\",\\\"editor.lineHighlightBackground\\\":\\\"#073642\\\",\\\"editorCursor.foreground\\\":\\\"#839496\\\",\\\"editorWhitespace.foreground\\\":\\\"#93a1a180\\\",\\\"editorLineNumber.foreground\\\":\\\"#566c74\\\",\\\"editorLineNumber.activeForeground\\\":\\\"#6e8a93\\\",\\\"editorGutter.background\\\":\\\"#073642\\\",\\\"editorMarkerNavigationError.background\\\":\\\"#ab395b\\\",\\\"editorMarkerNavigationWarning.background\\\":\\\"#5b7e7a\\\",\\\"editor.wordHighlightBackground\\\":\\\"#004454aa\\\",\\\"editor.wordHighlightStrongBackground\\\":\\\"#005a6faa\\\",\\\"peekViewTitle.background\\\":\\\"#00212b\\\",\\\"peekView.border\\\":\\\"#003847\\\",\\\"peekViewResult.background\\\":\\\"#00212b\\\",\\\"peekViewEditor.background\\\":\\\"#10192c\\\",\\\"peekViewEditorGutter.background\\\":\\\"#073642\\\",\\\"peekViewEditor.matchHighlightBackground\\\":\\\"#7744aa40\\\",\\\"tab.activeBackground\\\":\\\"#002b37\\\",\\\"tab.inactiveBackground\\\":\\\"#004052\\\",\\\"tab.border\\\":\\\"#003847\\\",\\\"tab.activeForeground\\\":\\\"#d6dbdb\\\",\\\"tab.inactiveForeground\\\":\\\"#93a1a1\\\",\\\"editorGroup.background\\\":\\\"#011b23\\\",\\\"editorGroupHeader.tabsBackground\\\":\\\"#004052\\\",\\\"editorGroup.border\\\":\\\"#00212b\\\",\\\"editorGroup.dropBackground\\\":\\\"#2aa19844\\\",\\\"panel.border\\\":\\\"#003847\\\",\\\"statusBar.foreground\\\":\\\"#93a1a1\\\",\\\"statusBar.background\\\":\\\"#00212b\\\",\\\"statusBar.noFolderBackground\\\":\\\"#00212b\\\",\\\"statusBarItem.prominentBackground\\\":\\\"#003847\\\",\\\"statusBarItem.prominentHoverBackground\\\":\\\"#003847\\\",\\\"activityBar.background\\\":\\\"#003847\\\",\\\"sideBar.background\\\":\\\"#00212b\\\",\\\"sideBarTitle.foreground\\\":\\\"#93a1a1\\\",\\\"titleBar.activeBackground\\\":\\\"#002c39\\\",\\\"terminal.foreground\\\":\\\"#839496\\\",\\\"statusBar.debuggingBackground\\\":\\\"#00212b\\\",\\\"debugExceptionWidget.border\\\":\\\"#ab395b\\\",\\\"debugExceptionWidget.background\\\":\\\"#00212b\\\",\\\"debugToolBar.background\\\":\\\"#00212b\\\",\\\"terminal.ansiBlack\\\":\\\"#073642\\\",\\\"terminal.ansiRed\\\":\\\"#dc322f\\\",\\\"terminal.ansiGreen\\\":\\\"#859900\\\",\\\"terminal.ansiYellow\\\":\\\"#b58900\\\",\\\"terminal.ansiBlue\\\":\\\"#268bd2\\\",\\\"terminal.ansiMagenta\\\":\\\"#d33682\\\",\\\"terminal.ansiCyan\\\":\\\"#2aa198\\\",\\\"terminal.ansiWhite\\\":\\\"#839496\\\",\\\"terminal.ansiBrightBlack\\\":\\\"#586e75\\\",\\\"terminal.ansiBrightRed\\\":\\\"#cb4b16\\\",\\\"terminal.ansiBrightGreen\\\":\\\"#859900\\\",\\\"terminal.ansiBrightYellow\\\":\\\"#657b83\\\",\\\"terminal.ansiBrightBlue\\\":\\\"#839496\\\",\\\"terminal.ansiBrightMagenta\\\":\\\"#6c71c4\\\",\\\"terminal.ansiBrightCyan\\\":\\\"#93a1a1\\\",\\\"terminal.ansiBrightWhite\\\":\\\"#839496\\\",\\\"editorBracketHighlight.foreground1\\\":\\\"#268bd2\\\",\\\"editorBracketHighlight.foreground2\\\":\\\"#b58900\\\",\\\"editorBracketHighlight.foreground3\\\":\\\"#d33682\\\"},\\\"watch\\\":false}\",\"memento/workbench.editor.keybindings\":\"{\\\"searchHistory\\\":[\\\"autofix\\\",\\\"edi\\\",\\\"ed\\\",\\\"navi\\\",\\\"\\\\\\\"Alt+,\\\\\\\"\\\",\\\"navig\\\",\\\"alt+\\\\\\\\\\\",\\\"\\\\\\\"shift+alt+d\\\\\\\"\\\",\\\"deleteWord\\\",\\\"keb\\\",\\\"kebab\\\",\\\"tran\\\",\\\"transf\\\",\\\"transform\\\",\\\"curs\\\",\\\"\\\\\\\"Shift+Alt+F\\\\\\\"\\\",\\\"cursorWord\\\",\\\"\\\\\\\"shift+alt+b\\\\\\\"\\\",\\\"textInputFocus\\\",\\\"\\\\\\\"ctrl+alt+b\\\\\\\"\\\",\\\"F6\\\",\\\"便\\\",\\\"编译\\\",\\\"compile\\\",\\\"加av\\\",\\\"ctrl+shift+r\\\",\\\"ctrl+shift+altr\\\",\\\"ctrl+shift+alt+r\\\",\\\"F5java\\\",\\\"jv\\\",\\\"ja\\\",\\\"@source:extension\\\",\\\"reload\\\",\\\"@source:user\\\",\\\"\\\\\\\"shift+alt+left\\\\\\\"\\\",\\\"navigate\\\",\\\"ctrl+k\\\",\\\"@source:system\\\",\\\"@source:system ctr\\\",\\\"@source:system ctrl+k\\\",\\\"delete\\\",\\\"java\\\",\\\"ma\\\",\\\"ct\\\",\\\"ctrl+F7\\\",\\\"ctrl+f\\\",\\\"cF7\\\",\\\"F\\\",\\\"makefi\\\",\\\"makefile\\\",\\\"F5\\\",\\\"fastsnippe\\\",\\\"fast\\\",\\\"fasts\\\",\\\"fastsni\\\",\\\"fastsnippet\\\",\\\"up\\\",\\\"upper\\\",\\\"ctrl+sh\\\",\\\"ctrl+shif\\\",\\\"ctrl+shift+f\\\",\\\"ctrl+shift+\\\",\\\"ctrl+al\\\",\\\"ctrl+alt\\\",\\\"ctrl+alt+\\\",\\\"ctrl+alt+f\\\",\\\"ctrl+shi\\\",\\\"ctrl+shift\\\",\\\"ctrl+shift+m\\\",\\\"ctrl+shift+n\\\",\\\"ctrl+shift+p\\\",\\\"ctrl\\\",\\\"ctrl+\\\",\\\"ctrl+left\\\",\\\"F7\\\",\\\"cmak\\\",\\\"cmake\\\",\\\"Ma\\\",\\\"\\\\\\\"f7\\\\\\\"\\\",\\\"Make\\\",\\\"\\\\\\\"shift+f5\\\\\\\"\\\",\\\"M\\\",\\\"\\\\\\\"ctrl+f5\\\\\\\"\\\",\\\"\\\\\\\"Control+F5\\\\\\\"\\\",\\\"Makefile\\\",\\\"alt+g\\\",\\\"stop\\\",\\\"alt+t\\\",\\\"alt+n\\\",\\\"alt+\\\",\\\"alt\\\",\\\"alt+p\\\",\\\"net\\\",\\\"next\\\",\\\"nextli\\\",\\\"nextlin\\\",\\\"cu\\\",\\\"cur\\\",\\\"cursor\\\",\\\"make\\\"]}\",\"workbench.activityBar.location\":\"default\",\"workbench.view.extension.test.state.hidden\":\"[{\\\"id\\\":\\\"workbench.view.testing\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"test-explorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.view.testCoverage\\\",\\\"isHidden\\\":false}]\",\"remote.explorerType\":\"dev-container,attached-container,exec,k8s-container\",\"workbench.welcomePage.walkthroughMetadata\":\"[[\\\"ms-azuretools.vscode-docker#dockerStart\\\",{\\\"firstSeen\\\":1697562465337,\\\"stepIDs\\\":[\\\"openFolder\\\",\\\"openFolderMac\\\",\\\"scaffold\\\",\\\"buildImage\\\",\\\"runContainer\\\",\\\"dockerExplorer\\\",\\\"pushImage\\\",\\\"azDeploy\\\",\\\"learn\\\"],\\\"manaullyOpened\\\":false}],[\\\"ms-python.python#pythonWelcome\\\",{\\\"firstSeen\\\":1697562465337,\\\"stepIDs\\\":[\\\"python.createPythonFile\\\",\\\"python.installPythonWin8\\\",\\\"python.installPythonMac\\\",\\\"python.installPythonLinux\\\",\\\"python.selectInterpreter\\\",\\\"python.createEnvironment\\\",\\\"python.runAndDebug\\\",\\\"python.learnMoreWithDS\\\"],\\\"manaullyOpened\\\":false}],[\\\"ms-python.python#pythonWelcome2\\\",{\\\"firstSeen\\\":1697562465337,\\\"stepIDs\\\":[\\\"python.createPythonFolder\\\",\\\"python.createPythonFile\\\",\\\"python.installPythonWin8\\\",\\\"python.installPythonMac\\\",\\\"python.installPythonLinux\\\",\\\"python.createEnvironment2\\\",\\\"python.runAndDebug\\\",\\\"python.learnMoreWithDS2\\\"],\\\"manaullyOpened\\\":false}],[\\\"ms-python.python#pythonDataScienceWelcome\\\",{\\\"firstSeen\\\":1697562465337,\\\"stepIDs\\\":[\\\"python.installJupyterExt\\\",\\\"python.createNewNotebook\\\",\\\"python.openInteractiveWindow\\\",\\\"python.dataScienceLearnMore\\\"],\\\"manaullyOpened\\\":false}],[\\\"ms-toolsai.jupyter#jupyterWelcome\\\",{\\\"firstSeen\\\":1697562465337,\\\"stepIDs\\\":[\\\"ipynb.newUntitledIpynb\\\",\\\"jupyter.selectKernel\\\",\\\"jupyter.exploreAndDebug\\\",\\\"jupyter.dataScienceLearnMore\\\"],\\\"manaullyOpened\\\":false}],[\\\"ms-vscode-remote.remote-wsl#wslWalkthrough\\\",{\\\"firstSeen\\\":1697562465337,\\\"stepIDs\\\":[\\\"explore.commands\\\",\\\"open.wslwindow\\\",\\\"create.project\\\",\\\"open.project\\\",\\\"linux.environment\\\",\\\"install.tools\\\",\\\"run.debug\\\",\\\"come.back\\\"],\\\"manaullyOpened\\\":false}],[\\\"ms-vscode.cpptools#cppWelcome\\\",{\\\"firstSeen\\\":1697562465337,\\\"stepIDs\\\":[\\\"awaiting.activation.mac\\\",\\\"awaiting.activation.linux\\\",\\\"awaiting.activation.windows\\\",\\\"no.compilers.found.mac\\\",\\\"no.compilers.found.linux\\\",\\\"no.compilers.found.windows\\\",\\\"verify.compiler.mac\\\",\\\"verify.compiler.linux\\\",\\\"verify.compiler.windows\\\",\\\"create.cpp.file\\\",\\\"relaunch.developer.command.prompt.windows\\\",\\\"run.project.mac\\\",\\\"run.project.linux\\\",\\\"run.project.windows\\\",\\\"customize.debugging.linux\\\",\\\"customize.debugging.windows\\\",\\\"customize.debugging.mac\\\"],\\\"manaullyOpened\\\":false}],[\\\"ms-vscode.remote-repositories#remoteRepositoriesWalkthrough\\\",{\\\"firstSeen\\\":1697562465337,\\\"stepIDs\\\":[\\\"editCommitRepo\\\",\\\"createGitHubPullRequest\\\",\\\"continueOn\\\",\\\"openRepo\\\",\\\"remoteIndicator\\\"],\\\"manaullyOpened\\\":false}],[\\\"SonarSource.sonarlint-vscode#SonarLint.walkthrough\\\",{\\\"firstSeen\\\":1697562465337,\\\"stepIDs\\\":[\\\"SonarLint.inAction\\\",\\\"SonarLint.learnMoreAboutIssues\\\",\\\"SonarLint.connectedModeIntro\\\",\\\"SonarLint.reachOut\\\"],\\\"manaullyOpened\\\":false}],[\\\"vscjava.vscode-java-pack#javaWelcome\\\",{\\\"firstSeen\\\":1697562465337,\\\"stepIDs\\\":[\\\"java.runtime\\\",\\\"java.showProjectExplorer\\\",\\\"java.showProjectExplorer.inactive\\\",\\\"java.debugAndTest\\\",\\\"java.extensions\\\",\\\"java.more\\\",\\\"java.moreForMac\\\"],\\\"manaullyOpened\\\":false}],[\\\"rust-lang.rust-analyzer#landing\\\",{\\\"firstSeen\\\":1721745258102,\\\"stepIDs\\\":[\\\"setup\\\",\\\"docs\\\",\\\"faq\\\",\\\"changelog\\\"],\\\"manaullyOpened\\\":false}]]\",\"commandPalette.mru.cache\":\"{\\\"usesLRU\\\":true,\\\"entries\\\":[]}\",\"commandPalette.mru.counter\":\"468\",\"encryption.migratedToGnomeLibsecret\":\"true\",\"extensionsAssistant/deprecated\":\"[\\\"dbaeumer.jshint\\\",\\\"eg2.vscode-npm-script\\\",\\\"tht13.html-preview-vscode\\\",\\\"waderyan.nodejs-extension-pack\\\",\\\"vue.vscode-typescript-vue-plugin\\\"]\",\"expandSuggestionDocs\":\"false\",\"workbench.panel.markers.hidden\":\"[{\\\"id\\\":\\\"workbench.panel.markers.view\\\",\\\"isHidden\\\":false}]\",\"workbench.panel.output.hidden\":\"[{\\\"id\\\":\\\"workbench.panel.output\\\",\\\"isHidden\\\":false}]\",\"terminal.hidden\":\"[{\\\"id\\\":\\\"terminal\\\",\\\"isHidden\\\":false}]\",\"workbench.explorer.views.state.hidden\":\"[{\\\"id\\\":\\\"outline\\\",\\\"isHidden\\\":false,\\\"order\\\":2},{\\\"id\\\":\\\"timeline\\\",\\\"isHidden\\\":false,\\\"order\\\":3},{\\\"id\\\":\\\"workbench.explorer.openEditorsView\\\",\\\"isHidden\\\":true,\\\"order\\\":0},{\\\"id\\\":\\\"workbench.explorer.emptyView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"npm\\\",\\\"isHidden\\\":true,\\\"order\\\":5},{\\\"id\\\":\\\"commitViewProvider\\\",\\\"isHidden\\\":false,\\\"order\\\":6},{\\\"id\\\":\\\"compareCommitViewProvider\\\",\\\"isHidden\\\":false,\\\"order\\\":7},{\\\"id\\\":\\\"xmlTreeView\\\",\\\"isHidden\\\":false,\\\"order\\\":8},{\\\"id\\\":\\\"clangd.typeHierarchyView\\\",\\\"isHidden\\\":false,\\\"order\\\":9},{\\\"id\\\":\\\"clangd.memoryUsage\\\",\\\"isHidden\\\":false,\\\"order\\\":10},{\\\"id\\\":\\\"clangd.ast\\\",\\\"isHidden\\\":false,\\\"order\\\":11},{\\\"id\\\":\\\"liveshare.session.explorer\\\",\\\"isHidden\\\":false,\\\"order\\\":12},{\\\"id\\\":\\\"rustDependencies\\\",\\\"isHidden\\\":false,\\\"order\\\":13},{\\\"id\\\":\\\"SonarLint.IssueLocations\\\",\\\"isHidden\\\":false,\\\"order\\\":14},{\\\"id\\\":\\\"javaProjectExplorer\\\",\\\"isHidden\\\":false,\\\"order\\\":15},{\\\"id\\\":\\\"mavenProjects\\\",\\\"isHidden\\\":false,\\\"order\\\":16},{\\\"id\\\":\\\"makefile.outline\\\",\\\"isHidden\\\":false,\\\"order\\\":4}]\",\"workbench.scm.views.state.hidden\":\"[{\\\"id\\\":\\\"workbench.scm.repositories\\\",\\\"isHidden\\\":true},{\\\"id\\\":\\\"workbench.scm\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.scm.history\\\",\\\"isHidden\\\":false}]\",\"workbench.view.search.state.hidden\":\"[{\\\"id\\\":\\\"workbench.view.search\\\",\\\"isHidden\\\":false}]\",\"workbench.activity.pinnedViewlets2\":\"[{\\\"id\\\":\\\"workbench.view.explorer\\\",\\\"pinned\\\":true,\\\"visible\\\":true,\\\"order\\\":0},{\\\"id\\\":\\\"workbench.view.search\\\",\\\"pinned\\\":true,\\\"visible\\\":true,\\\"order\\\":1},{\\\"id\\\":\\\"workbench.view.extension.foldersCompare\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":9},{\\\"id\\\":\\\"workbench.view.scm\\\",\\\"pinned\\\":true,\\\"visible\\\":true,\\\"order\\\":2},{\\\"id\\\":\\\"workbench.view.debug\\\",\\\"pinned\\\":true,\\\"visible\\\":true,\\\"order\\\":3},{\\\"id\\\":\\\"workbench.view.extension.test\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":6},{\\\"id\\\":\\\"workbench.view.remote\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":4},{\\\"id\\\":\\\"workbench.view.extensions\\\",\\\"pinned\\\":true,\\\"visible\\\":true,\\\"order\\\":4},{\\\"id\\\":\\\"workbench.view.extension.references-view\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":7},{\\\"id\\\":\\\"workbench.view.extension.latex-workshop-activitybar\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":8},{\\\"id\\\":\\\"workbench.view.extension.dockerView\\\",\\\"pinned\\\":false,\\\"visible\\\":false,\\\"order\\\":10},{\\\"id\\\":\\\"workbench.view.extension.jupyter\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":11},{\\\"id\\\":\\\"workbench.view.extension.cmake-view\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":12},{\\\"id\\\":\\\"workbench.view.extension.hexExplorer\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":13},{\\\"id\\\":\\\"workbench.view.extension.makefile__viewContainer\\\",\\\"pinned\\\":false,\\\"visible\\\":false,\\\"order\\\":14},{\\\"id\\\":\\\"workbench.view.extension.liveshare\\\",\\\"pinned\\\":false,\\\"visible\\\":false,\\\"order\\\":15},{\\\"id\\\":\\\"workbench.view.extension.thunder-client\\\",\\\"pinned\\\":false,\\\"visible\\\":false,\\\"order\\\":16},{\\\"id\\\":\\\"workbench.view.extension.metals-explorer\\\",\\\"pinned\\\":false,\\\"visible\\\":false,\\\"order\\\":17},{\\\"id\\\":\\\"workbench.view.extension.metals-find-in-files\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":18},{\\\"id\\\":\\\"workbench.view.extension.SonarLint\\\",\\\"pinned\\\":false,\\\"visible\\\":false,\\\"order\\\":19},{\\\"id\\\":\\\"workbench.view.extension.gradleContainerView\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":20},{\\\"id\\\":\\\"workbench.panel.chatSidebar\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":100},{\\\"id\\\":\\\"workbench.view.editSessions\\\",\\\"pinned\\\":true,\\\"visible\\\":false},{\\\"id\\\":\\\"workbench.view.sync\\\",\\\"pinned\\\":true,\\\"visible\\\":false},{\\\"id\\\":\\\"userDataProfiles\\\",\\\"pinned\\\":true,\\\"visible\\\":false}]\",\"workbench.panel.repl.hidden\":\"[{\\\"id\\\":\\\"workbench.panel.repl.view\\\",\\\"isHidden\\\":false}]\",\"workbench.panel.pinnedPanels\":\"[{\\\"id\\\":\\\"workbench.panel.markers\\\",\\\"pinned\\\":true,\\\"visible\\\":true,\\\"order\\\":0},{\\\"id\\\":\\\"workbench.panel.output\\\",\\\"pinned\\\":true,\\\"visible\\\":true,\\\"order\\\":1},{\\\"id\\\":\\\"workbench.panel.repl\\\",\\\"pinned\\\":true,\\\"visible\\\":true,\\\"order\\\":2},{\\\"id\\\":\\\"terminal\\\",\\\"pinned\\\":true,\\\"visible\\\":true,\\\"order\\\":3},{\\\"id\\\":\\\"workbench.panel.testResults\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":3},{\\\"id\\\":\\\"~remote.forwardedPortsContainer\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":5},{\\\"id\\\":\\\"workbench.view.extension.jupyter-variables\\\",\\\"pinned\\\":true,\\\"visible\\\":false,\\\"order\\\":6},{\\\"id\\\":\\\"refactorPreview\\\",\\\"pinned\\\":true,\\\"visible\\\":false}]\",\"memento/gettingStartedService\":\"{\\\"installGit\\\":{\\\"done\\\":true}}\",\"~remote.forwardedPortsContainer.hidden\":\"[{\\\"id\\\":\\\"~remote.forwardedPorts\\\",\\\"isHidden\\\":false}]\",\"themeUpdatedNotificationShown\":\"true\",\"workbench.view.extensions.state.hidden\":\"[{\\\"id\\\":\\\"workbench.views.extensions.installed\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.searchOutdated\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.workspaceRecommendations\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.popular\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.searchRecentlyUpdated\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.otherRecommendations\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"extensions.recommendedList\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.enabled\\\",\\\"isHidden\\\":true},{\\\"id\\\":\\\"workbench.views.extensions.disabled\\\",\\\"isHidden\\\":true},{\\\"id\\\":\\\"workbench.views.extensions.marketplace\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.searchInstalled\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.searchEnabled\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.searchDisabled\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.searchBuiltin\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.searchWorkspaceUnsupported\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.builtinFeatureExtensions\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.builtinThemeExtensions\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.builtinProgrammingLanguageExtensions\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.untrustedUnsupportedExtensions\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.untrustedPartiallySupportedExtensions\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.virtualUnsupportedExtensions\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.virtualPartiallySupportedExtensions\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.extensions.deprecatedExtensions\\\",\\\"isHidden\\\":false}]\",\"workbench.view.sync.state.hidden\":\"[{\\\"id\\\":\\\"workbench.views.sync.conflicts\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.sync.remoteActivity\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.sync.machines\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.views.sync.localActivity\\\",\\\"isHidden\\\":true},{\\\"id\\\":\\\"workbench.views.sync.troubleshoot\\\",\\\"isHidden\\\":true},{\\\"id\\\":\\\"workbench.views.sync.externalActivity\\\",\\\"isHidden\\\":false}]\",\"workbench.view.remote.state.hidden\":\"[{\\\"id\\\":\\\"github.codespaces.explorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"github.codespaces.warnExplorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"github.codespaces.performanceExplorer\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"targetsContainers\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"detailsContainers\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"devVolumes\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"remoteTargets\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"targetsWsl\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"remoteHub.views.workspaceRepositories\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"~remote.helpPanel\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.foldersCompare.state.hidden\":\"[{\\\"id\\\":\\\"foldersCompareAppService\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"foldersCompareAppServiceOnlyA\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"foldersCompareAppServiceOnlyB\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"foldersCompareAppServiceIdenticals\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.dockerView.state.hidden\":\"[{\\\"id\\\":\\\"dockerContainers\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"dockerImages\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"dockerRegistries\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"dockerNetworks\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"dockerVolumes\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"vscode-docker.views.dockerContexts\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"vscode-docker.views.help\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.makefile__viewContainer.state.hidden\":\"[{\\\"id\\\":\\\"makefile.outline\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.liveshare.state.hidden\":\"[{\\\"id\\\":\\\"liveshare.session\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"liveshare.help\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"liveshare.devtools\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.thunder-client.state.hidden\":\"[{\\\"id\\\":\\\"thunder-client-sidebar\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.metals-explorer.state.hidden\":\"[{\\\"id\\\":\\\"metalsPackages\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"metalsBuild\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"metalsHelp\\\",\\\"isHidden\\\":false}]\",\"workbench.view.extension.SonarLint.state.hidden\":\"[{\\\"id\\\":\\\"SonarLint.AllRules\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"SonarLint.ConnectedMode\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"SonarLint.SecurityHotspots\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"SonarLint.HelpAndFeedback\\\",\\\"isHidden\\\":false}]\",\"workbench.view.debug.state.hidden\":\"[{\\\"id\\\":\\\"workbench.debug.welcome\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.debug.variablesView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.debug.watchExpressionsView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.debug.callStackView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.debug.loadedScriptsView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"workbench.debug.breakPointsView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"jsBrowserBreakpoints\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"jsExcludedCallers\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"CppSshTargetsView\\\",\\\"isHidden\\\":false},{\\\"id\\\":\\\"jsDebugNetworkTree\\\",\\\"isHidden\\\":false}]\"}}"}